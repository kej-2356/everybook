-- --------------------------------------------------------
-- 호스트:                          glemfk1214.cafe24.com
-- 서버 버전:                        10.1.13-MariaDB - MariaDB Server
-- 서버 OS:                        Linux
-- HeidiSQL 버전:                  10.1.0.5464
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- glemfk1214 데이터베이스 구조 내보내기
CREATE DATABASE IF NOT EXISTS `glemfk1214` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `glemfk1214`;

-- 프로시저 glemfk1214.pro_rent_rank 구조 내보내기
DELIMITER //
//
DELIMITER ;

-- 테이블 glemfk1214.tb_account 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_account` (
  `account_code` varchar(30) NOT NULL COMMENT '계정과목코드',
  `account_name` varchar(50) NOT NULL COMMENT '계정과목이름',
  `account_kind` enum('수입','비용','자산','부채') NOT NULL COMMENT '계정과목 종류',
  `account_description` varchar(100) NOT NULL COMMENT '계정과목 설명',
  `account_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`account_code`),
  KEY `FK_tb_officer_TO_tb_account` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_account` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='계정과목 테이블\r\n';

-- 테이블 데이터 glemfk1214.tb_account:~3 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_account` DISABLE KEYS */;
INSERT INTO `tb_account` (`account_code`, `account_name`, `account_kind`, `account_description`, `account_reg_date`, `officer_id`) VALUES
	('ac_001', '도서인쇄비', '비용', '도서 구입비용', '2020-06-05', 'officer_01'),
	('ac_002', '현금', '자산', '현금', '2020-06-05', 'officer_02'),
	('ac_003', '신용카드', '자산', '신용카드', '2020-07-13', 'officer_01');
/*!40000 ALTER TABLE `tb_account` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_book 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_book` (
  `book_code` varchar(30) NOT NULL COMMENT '도서코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `book_library_code` varchar(30) NOT NULL COMMENT '청구기호',
  `book_image` varchar(200) NOT NULL COMMENT '책 이미지',
  `book_name` varchar(50) NOT NULL COMMENT '도서이름',
  `category_code` varchar(30) NOT NULL COMMENT '카테고리코드',
  `writer_code` varchar(30) NOT NULL COMMENT '저자코드',
  `publisher_code` varchar(30) NOT NULL COMMENT '출판사코드',
  `book_publish_date` date NOT NULL COMMENT '도서출간날짜',
  `book_price` varchar(50) NOT NULL COMMENT '도서가격',
  `book_ISBN` varchar(30) NOT NULL COMMENT 'ISBN',
  `book_description` varchar(300) NOT NULL COMMENT '책 상세내역',
  `book_situation` enum('대여 중','보유 중','예약 중') NOT NULL DEFAULT '보유 중' COMMENT '도서상태',
  `book_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  `group_code` varchar(30) DEFAULT NULL COMMENT '그룹코드',
  PRIMARY KEY (`book_code`),
  KEY `FK_tb_officer_TO_tb_book` (`officer_id`),
  KEY `FK_tb_library_TO_tb_book` (`library_code`),
  KEY `FK_tb_category_TO_tb_book` (`category_code`),
  KEY `FK_tb_writer_TO_tb_book` (`writer_code`),
  KEY `group_code` (`group_code`),
  KEY `FK_tb_book_tb_publisher` (`publisher_code`),
  CONSTRAINT `FK_tb_book_tb_publisher` FOREIGN KEY (`publisher_code`) REFERENCES `tb_publisher` (`publisher_code`),
  CONSTRAINT `FK_tb_category_TO_tb_book` FOREIGN KEY (`category_code`) REFERENCES `tb_category` (`category_code`),
  CONSTRAINT `FK_tb_library_TO_tb_book` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_officer_TO_tb_book` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_writer_TO_tb_book` FOREIGN KEY (`writer_code`) REFERENCES `tb_writer` (`writer_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서구입 테이블\r\n\r\n';

-- 테이블 데이터 glemfk1214.tb_book:~25 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_book` DISABLE KEYS */;
INSERT INTO `tb_book` (`book_code`, `library_code`, `book_library_code`, `book_image`, `book_name`, `category_code`, `writer_code`, `publisher_code`, `book_publish_date`, `book_price`, `book_ISBN`, `book_description`, `book_situation`, `book_reg_date`, `officer_id`, `group_code`) VALUES
	('bk_0001', 'library_01', 'bk_library01_0001', '', 'JAVA의 정석', 'category_001', 'writer_001', 'publisher_001', '2017-06-16', '28000', '9788994492032', '', '대여 중', '2020-06-16', 'officer_01', 'group_001'),
	('bk_0002', 'library_01', 'bk_library01_0002', '', 'SpringBoot', 'category_001', 'writer_002', 'publisher_002', '2018-05-12', '30000', '9788943305840', '', '예약 중', '2020-06-19', 'officer_03', 'group_001'),
	('bk_0003', 'library_01', 'bk_library01_0003', '', '해리포터', 'category_003', 'writer_004', 'publisher_002', '2020-06-16', '15000', '9847532156821', '', '대여 중', '2020-06-23', 'officer_02', 'group_001'),
	('bk_0004', 'library_01', 'bk_library01_0004', '', '아이언맨', 'category_004', 'writer_005', 'publisher_003', '2019-03-28', '18000', '9874845601568', '', '보유 중', '2020-06-23', 'officer_04', 'group_001'),
	('bk_0005', 'library_01', 'bk_library01_0005', '', 'SpringBoot시작하기', 'category_001', 'writer_002', 'publisher_002', '2020-06-29', '28000', '9788943305840', '', '보유 중', '2020-06-29', 'officer_02', 'group_001\r\n'),
	('bk_0006', 'library_01', 'bk_library02_0001', '', '뱃살빼기', 'category_005', 'writer_004', 'publisher_004', '2020-05-11', '14000', '9984243215688', '', '대여 중', '2020-07-02', 'officer_05', 'group_001'),
	('bk_0007', 'library_003', 'bk_library03_0001', '', '헬스의 정석', 'category_006', 'writer_006', 'publisher_005', '2020-04-11', '20000', '9985315732456', '', '대여 중', '2020-07-02', 'officer_06', 'group_001'),
	('bk_0008', 'library_002', '833.6히12나', 'http://image.aladin.co.kr/product/15848/6/cover/k622533431_1.jpg', '나미야 잡화점의 기적', 'category_082', 'writer_101', 'publisher_101', '2013-01-03', '0', '9788972756194', '2012년 12월 19일 국내 번역 출간된 이래 6년 연속 베스트셀러 순위 상위권을 차지하며 서점가에서 "21세기 가장 경이로운 베스트셀러"라고 불리는 소설. \'2008~2017년, 지난 10년간 한국에서 가장 많이 팔린 소설\', 히가시노 게이고의 대표작 &lt;나미야 잡화점의 기적&gt;이 국내 누적 판매 100만 부를 돌파했다.', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0009', 'library_002', '818김56애', 'https://image.aladin.co.kr/product/24054/10/cover/k772639730_2.jpg', '애쓰지 않고 편안하게', 'category_080', 'writer_102', 'publisher_102', '2020-04-23', '0', '9791130629636', '&lt;나는 나로 살기로 했다&gt;의 그녀가 4년 만에 훌쩍 성장해서 돌아왔다. 나를 지키면서도 갈등은 피하고 싶은 사람들을 위한 인간관계 처방전. "모두에게 정중하되, 누구에게도 쩔쩔매지 않기 위하여!"', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0010', 'library_002', '818윤74하', 'http://image.aladin.co.kr/product/13865/46/cover/k162532323_1.jpg', '하고 싶은 대로 살아도 괜찮아', 'category_080', 'writer_104', 'publisher_104', '2018-03-23', '0', '9791186639702', '자기계발과 글쓰기 강사로 독자들과 소통한 윤정은 작가의 에세이. 저자는 사회가 강요하는 고정관념에 매몰되지 않고 자유로운 나로 살기 위해서 필요한 나를 돌보는 방법들을 이야기하며, 이 시대를 살아가는 여성에게 남을 위해 애쓰기보단 나를 돌아보고 행복한 나를 찾는 것이 중요하다고 말한다.', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0011', 'library_002', '818김68통', 'https://image.aladin.co.kr/product/24088/61/cover/k182639239_1.jpg', '(나를 숨 쉬게 하는) 보통의 언어들', 'category_080', 'writer_105', 'publisher_105', '2020-04-22', '0', '9791190786355', '대한민국 대표 작사가 김이나가 일상의 언어들에서 포착한 마음의 풍경. 김이나 작가가 그간 대중과 긴밀히 소통해온 경험을 살려 우리가 삶에서 맞부딪히는 복잡한 감정과 관계의 고민에 대한 해법을 일상의 단어 속에서 탐색한다.', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0012', 'library_002', '325.2113이54더', 'https://image.aladin.co.kr/product/23400/44/cover/k022637311_2.jpg', '더 해빙', 'category_032', 'writer_106', 'publisher_106', '2020-02-15', '0', '9791190382175', '부와 행운을 만나는 출발점, 마법의 감정 Having! 국내 최초로 미국에서 선(先)출간되어 세계가 먼저 찾아 읽은 책이다. 영미권을 비롯 프랑스, 독일, 이탈리아, 러시아 등 21개국에 판권이 수출되어 ‘불안감이 사라지게 해준 책’, ‘행운의 바이블’, ‘이 책을 읽고 행운이 찾아왔다’ 등 찬사를 보낸 이 책은 마음가짐을 다듬으며 원하는 것을 얻는 놀라운 가르침을 담고 있다.', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0013', 'library_002', '389재294총', 'http://image.aladin.co.kr/product/61/50/cover/8970127240_2.jpg', '총, 균, 쇠', 'category_038', 'writer_107', 'publisher_107', '2006-01-10', '22,000', '9788970127248', '왜 어떤 민족들은 다른 민족들의 정복과 지배의 대상으로 전락하고 말았는가? 왜 원주민들은 유라시아인들에 의해 도태되고 말았는가? 왜 각 대륙들마다 문명의 발달 속도에 차이가 생겨났는가? 인간 사회의 다양한 문명은 어디에서 비롯되었는가? 1998년 퓰리처 상을 수상한 는 이런 의문을 명쾌하게 분석한 명저이다.', '보유 중', '2020-07-06', 'officer_01', NULL),
	('bk_0014', 'library_01', '833.6지67나', 'http://image.aladin.co.kr/product/15848/6/cover/k622533431_1.jpg', '나미야 잡화점의 기적', 'category_082', 'writer_108', 'publisher_101', '2013-01-03', '', '9788972756194', '2012년 12월 19일 국내 번역 출간된 이래 6년 연속 베스트셀러 순위 상위권을 차지하며 서점가에서 "21세기 가장 경이로운 베스트셀러"라고 불리는 소설. \'2008~2017년, 지난 10년간 한국에서 가장 많이 팔린 소설\', 히가시노 게이고의 대표작 &lt;나미야 잡화점의 기적&gt;이 국내 누적 판매 100만 부를 돌파했다.', '보유 중', '2020-07-06', 'officer_03', NULL),
	('bk_0015', 'library_01', '818윤74하', 'http://image.aladin.co.kr/product/13865/46/cover/k162532323_1.jpg', '하고 싶은 대로 살아도 괜찮아', 'category_080', 'writer_104', 'publisher_104', '2018-03-23', '13000', '9791186639702', '자기계발과 글쓰기 강사로 독자들과 소통한 윤정은 작가의 에세이. 저자는 사회가 강요하는 고정관념에 매몰되지 않고 자유로운 나로 살기 위해서 필요한 나를 돌보는 방법들을 이야기하며, 이 시대를 살아가는 여성에게 남을 위해 애쓰기보단 나를 돌아보고 행복한 나를 찾는 것이 중요하다고 말한다.', '보유 중', '2020-07-06', 'officer_03', NULL),
	('bk_0016', 'library_01', '813.7정54시', 'https://image.aladin.co.kr/product/24131/37/cover/8954672213_1.jpg', '시선으로부터,', 'category_080', 'writer_103', 'publisher_103', '2020-05-18', '14000', '9788954672214', '데뷔 10년, 장르를 넘나들며 다양한 방식으로 이야기를 펼쳐내면서도 우리를 단 한 번도 실망시킨 적이 없는 정세랑 작가가 돌아왔다. 구상부터 완성까지 5년이 걸린 대작으로, 한국일보문학상을 수상한 &lt;피프티 피플&gt; 이후 4년 만에 내놓는 신작 장편소설이다.', '보유 중', '2020-07-06', 'officer_03', NULL),
	('bk_0017', 'library_01', '818김56애', 'https://image.aladin.co.kr/product/24054/10/cover/k772639730_2.jpg', '애쓰지 않고 편안하게', 'category_080', 'writer_102', 'publisher_102', '2020-04-23', '15000', '9791130629636', '나는 나로 살기로 했다의 그녀가 4년 만에 훌쩍 성장해서 돌아왔다. 나를 지키면서도 갈등은 피하고 싶은 사람들을 위한 인간관계 처방전. "모두에게 정중하되, 누구에게도 쩔쩔매지 않기 위하여!"', '보유 중', '2020-07-06', 'officer_03', NULL),
	('bk_0018', 'library_01', '813.7정54시V.2', 'https://image.aladin.co.kr/product/24131/37/cover/8954672213_1.jpg', '시선으로부터,', 'category_080', 'writer_103', 'publisher_103', '2020-05-18', '14000', '9788954672214', '데뷔 10년, 장르를 넘나들며 다양한 방식으로 이야기를 펼쳐내면서도 우리를 단 한 번도 실망시킨 적이 없는 정세랑 작가가 돌아왔다. 구상부터 완성까지 5년이 걸린 대작으로, 한국일보문학상을 수상한 &lt;피프티 피플&gt; 이후 4년 만에 내놓는 신작 장편소설이다.', '보유 중', '2020-07-06', 'officer_03', NULL),
	('bk_0019', 'library_01', '813.7조678', 'https://bookthumb-phinf.pstatic.net/cover/112/111/11211133.jpg?type=m1&udate=20180530', '82년생 김지영', 'category_080', 'writer_109', 'publisher_021', '2016-10-05', '13000', '9788937473135', '오늘의 젊은 작가 13권. 조남주 장편소설. 시사 교양 프로그램에서 10년 동안 일한 방송 작가답게 서민들의 일상에서 발생하는 비극을 사실적이고 공감대 높은 스토리로 표현하는 데 특출 난 재능을 보이는 작가는 82년생 김지영에서 30대를 살고 있는 한국 여성들의 보편적인 일상을 완벽하게 재현한다.', '보유 중', '2020-07-08', 'officer_03', NULL),
	('bk_0020', 'library_01', '334김78선', 'https://image.aladin.co.kr/product/19874/76/cover/8936477196_1.jpg', '선량한 차별주의자', 'category_033', 'writer_110', 'publisher_108', '2019-07-02', '15000', '9788936477196', '선량한 차별주의자들의 세상에서 평등을 외치는 당신을 위한 안내서 \r\n혐오와 차별은 잡초처럼 자란다. 조금만 신경 쓰지 않으면 온 사회에 무성해진다. 사람들은 때로 아주 작은 차별은 무시해도 되고, 심지어 다수에게 유리한 차별은 합리적인 차등이라고 이야기하며, 차별에 대한 문제제기나...', '보유 중', '2020-07-22', 'officer_03', NULL),
	('bk_0021', 'library_01', '816.7지67여', 'https://image.aladin.co.kr/product/18827/60/cover/8954655971_2.jpg', '여행의 이유', 'category_080', 'writer_111', 'publisher_103', '2019-04-02', '13500', '9788954655972', '“이 책을 쓰는 데 내 모든 여행의 경험이 필요했다”여행-일상-여행의 고리를 잇는 아홉 개의 매혹적인 이야기김영하 신작 산문 『여행의 이유』 출간!『여행의 이유』는 작가 김영하가 처음 여행을 했던 순간부터 최근의 여행까지, 오랜 시간 여행을 하면서 느끼고 생각했던 것들을 아홉 가지의 이야기로...', '보유 중', '2020-07-22', 'officer_03', NULL),
	('bk_0022', 'library_01', '833.6야72돌', 'http://image.aladin.co.kr/product/10174/56/cover/s572533950_1.jpg', '돌이킬 수 없는 약속', 'category_082', 'writer_112', 'publisher_109', '2016-09-19', '15000', '9788998274795', '제51회 에드가와란포상 수상작가 야쿠마루 가쿠 장편 미스터리 추리소설. 주인공이 과거에 저지른 죄, 그리고 15년 전에 했던 어떤 약속을 둘러싸고 벌어지는 미스터리 소설이다. 사람이 죄를 지으면 어떻게 그 대가를 치러야 할까?', '보유 중', '2020-07-22', 'officer_03', NULL),
	('bk_0023', 'library_002', 'bk_library002_0001', 'https://image.aladin.co.kr/product/23400/44/cover/k022637311_2.jpg', '더 해빙', 'category_032', 'writer_106', 'publisher_106', '2020-02-15', '16000', '9791190382175', '부와 행운을 만나는 출발점, 마법의 감정 Having! 국내 최초로 미국에서 선(先)출간되어 세계가 먼저 찾아 읽은 책이다. 영미권을 비롯 프랑스, 독일, 이탈리아, 러시아 등 21개국에 판권이 수출되어 ‘불안감이 사라지게 해준 책’, ‘행운의 바이블’, ‘이 책을 읽고 행운이 찾아왔다’ 등 찬사를 보낸 이 책은 마음가짐을 다듬으며 원하는 것을 얻는 놀라운 가르침을 담고 있다.', '보유 중', '2020-07-23', 'officer_01', NULL),
	('bk_0024', 'library_002', '650.4서38미', 'https://image.aladin.co.kr/product/22957/37/cover/k062637495_1.jpg', '미술관에 간 물리학자', 'category_064', 'writer_114', 'publisher_110', '2020-01-16', '18000', '9791187150640 ', '미술관에 간 지식인 시리즈. 물리학은 만물의 이치를 탐구하는 학문이다. 만물의 본질을 각자의 언어로 궁구(窮究) 한다는 차원에서 과학자의 일과 예술가의 일은 다르지 않다.', '대여 중', '2020-07-23', 'officer_01', NULL),
	('bk_0025', 'library_002', '818지67어', 'https://image.aladin.co.kr/product/20002/71/cover/k942635044_1.jpg', '어른답게 삽시다', 'category_080', 'writer_115', 'publisher_111', '2019-07-16', '14000', '9791188912506 ', '이시형 박사는 첫 저서 &lt;배짱으로 삽시다&gt; 이후 끊임없이 우리 사회에 건강한 정신과 자연체로 살아가는 법에 대한 화두를 던져오며 \'국민 의사\'라고 불렸다. 그런 그가 올해 2019년 86세의 나이로 새롭게 \'나이듦\'에 대한 진솔한 이야기를 들고 나왔다.', '대여 중', '2020-07-23', 'officer_01', NULL);
/*!40000 ALTER TABLE `tb_book` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_book_apply 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_book_apply` (
  `apply_code` varchar(30) NOT NULL COMMENT '신청코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '신청회원아이디',
  `apply_price` varchar(50) DEFAULT NULL COMMENT '신청도서가격',
  `apply_situation` enum('진행 중','구매완료') NOT NULL COMMENT '진행상황',
  `book_name` varchar(50) NOT NULL COMMENT '도서 이름',
  `book_ISBN` varchar(30) NOT NULL COMMENT 'ISBN',
  `apply_publish_date` date DEFAULT NULL COMMENT '신청도서발간일',
  `apply_publisher` varchar(30) DEFAULT NULL COMMENT '신청도서출판사',
  `apply_writer` varchar(30) DEFAULT NULL COMMENT '신청도서저자',
  `apply_reg_date` date NOT NULL COMMENT '신청등록날짜',
  PRIMARY KEY (`apply_code`),
  KEY `FK_tb_library_TO_tb_bk_apply` (`library_code`),
  KEY `FK_tb_book_TO_tb_bk_apply` (`book_ISBN`),
  KEY `FK_tb_member_TO_tb_bk_apply` (`member_id`),
  CONSTRAINT `FK_tb_library_TO_tb_bk_apply` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_bk_apply` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서신청 케이블';

-- 테이블 데이터 glemfk1214.tb_book_apply:~1 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_book_apply` DISABLE KEYS */;
INSERT INTO `tb_book_apply` (`apply_code`, `library_code`, `member_id`, `apply_price`, `apply_situation`, `book_name`, `book_ISBN`, `apply_publish_date`, `apply_publisher`, `apply_writer`, `apply_reg_date`) VALUES
	('apply_0004', 'library_01', 'member_002', '19000', '진행 중', 'SpringBoot ', '2132159789123', '2020-06-02', '한국스마트정보교육원', '홍길동', '2020-06-19');
/*!40000 ALTER TABLE `tb_book_apply` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_broken 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_broken` (
  `broken_code` varchar(30) NOT NULL COMMENT '파손코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '파손회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '파손도서코드',
  `broken_level` varchar(50) NOT NULL COMMENT '파손수준',
  `broken_result` varchar(50) DEFAULT NULL COMMENT '파손처리결과',
  `broken_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`broken_code`),
  KEY `FK_tb_officer_TO_tb_broken` (`officer_id`),
  KEY `FK_tb_book_TO_tb_broken` (`book_code`),
  KEY `FK_tb_library_TO_tb_broken` (`library_code`),
  KEY `FK_tb_member_TO_tb_broken` (`member_id`),
  CONSTRAINT `FK_tb_book_TO_tb_broken` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_broken` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_broken` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`) ON DELETE CASCADE,
  CONSTRAINT `FK_tb_officer_TO_tb_broken` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='파손 테이블';

-- 테이블 데이터 glemfk1214.tb_broken:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_broken` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_broken` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_budget 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_budget` (
  `budget_code` varchar(30) NOT NULL COMMENT '예산코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `account_code` varchar(30) NOT NULL COMMENT '계정과목코드',
  `budget_money` int(11) NOT NULL COMMENT '예산금액',
  `budget_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`budget_code`),
  KEY `FK_tb_officer_TO_tb_budget` (`officer_id`),
  KEY `FK_tb_library_TO_tb_budget` (`library_code`),
  KEY `FK_tb_account_TO_tb_budget` (`account_code`),
  CONSTRAINT `FK_tb_account_TO_tb_budget` FOREIGN KEY (`account_code`) REFERENCES `tb_account` (`account_code`),
  CONSTRAINT `FK_tb_library_TO_tb_budget` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_officer_TO_tb_budget` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='예산 테이블';

-- 테이블 데이터 glemfk1214.tb_budget:~1 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_budget` DISABLE KEYS */;
INSERT INTO `tb_budget` (`budget_code`, `library_code`, `account_code`, `budget_money`, `budget_reg_date`, `officer_id`) VALUES
	('bg_001', 'library_01', 'ac_001', 3000000, '2020-06-05', 'officer_01');
/*!40000 ALTER TABLE `tb_budget` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_career 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_career` (
  `career_code` varchar(30) NOT NULL COMMENT '경력코드',
  `officer_id` varchar(50) NOT NULL COMMENT '직원아이디',
  `career_name` varchar(50) NOT NULL COMMENT '경력이름',
  `career_period_start` date NOT NULL COMMENT '입사일',
  `career_period_end` date NOT NULL COMMENT '퇴사일',
  `career_reg_date` date NOT NULL COMMENT '등록날짜',
  PRIMARY KEY (`career_code`),
  KEY `FK_tb_officer_TO_tb_career` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_career` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='경력 테이블';

-- 테이블 데이터 glemfk1214.tb_career:~4 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_career` DISABLE KEYS */;
INSERT INTO `tb_career` (`career_code`, `officer_id`, `career_name`, `career_period_start`, `career_period_end`, `career_reg_date`) VALUES
	('career_001', 'officer_01', '스타벅스직원', '2018-06-12', '2019-06-12', '2020-06-22'),
	('career_002', 'officer_02', '군인', '2017-03-01', '0000-00-00', '2020-06-22'),
	('career_003', 'officer_03', '학생', '2016-03-01', '2020-02-17', '2020-06-22'),
	('career_004', 'officer_01', '편의점알바', '1999-01-01', '2001-01-01', '2020-07-01');
/*!40000 ALTER TABLE `tb_career` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_category 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_category` (
  `category_code` varchar(30) NOT NULL COMMENT '카테고리코드',
  `category_number` varchar(50) NOT NULL COMMENT '카테고리분류번호',
  `category_name` varchar(50) NOT NULL COMMENT '카테고리이름',
  `category_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`category_code`),
  KEY `FK_tb_officer_TO_tb_category` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_category` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='카테고리 테이블';

-- 테이블 데이터 glemfk1214.tb_category:~97 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_category` DISABLE KEYS */;
INSERT INTO `tb_category` (`category_code`, `category_number`, `category_name`, `category_reg_date`, `officer_id`) VALUES
	('category_001', '000', '총류, 컴퓨터과학', '2020-06-04', 'officer_01'),
	('category_002', '010', '도서학, 서지학', '2020-06-04', 'officer_01'),
	('category_003', '020', '문헌정보학', '2020-06-04', 'officer_01'),
	('category_004', '030', '백과사전', '2020-06-04', 'officer_01'),
	('category_005', '040', '강연집, 연설문집', '2020-06-04', 'officer_01'),
	('category_006', '050', '일반 연속간행물', '2020-06-04', 'officer_01'),
	('category_007', '060', '일반학회, 단체,협회, 기관, 박물관', '2020-06-04', 'officer_01'),
	('category_008', '070', '신문, 언론, 저널리즘', '2020-06-04', 'officer_01'),
	('category_009', '080', '일반전집, 총서', '2020-06-04', 'officer_01'),
	('category_010', '090', '향토자료', '2020-06-04', 'officer_01'),
	('category_011', '100', '철학 일반', '2020-06-04', 'officer_01'),
	('category_012', '110', '형이상학', '2020-06-04', 'officer_01'),
	('category_013', '120', '인식론, 인과론, 인간학', '2020-06-04', 'officer_01'),
	('category_014', '130', '철학체계', '2020-06-04', 'officer_01'),
	('category_015', '140', '경학, 사서\n(논어,맹자,중용,대학),\n오경\n(역,서,시,예,춘추),\n효경', '2020-06-04', 'officer_01'),
	('category_016', '150', '동양철학, 사상', '2020-06-04', 'officer_01'),
	('category_017', '160', '서양철학', '2020-06-04', 'officer_01'),
	('category_018', '170', '논리학', '2020-06-04', 'officer_01'),
	('category_019', '180', '심리학, 풍수지리,\n역술, 관상', '2020-06-04', 'officer_01'),
	('category_020', '190', '윤리학, 도덕철학,\n자기계발', '2020-06-04', 'officer_01'),
	('category_021', '200', '종교 일반', '2020-06-04', 'officer_01'),
	('category_022', '210', '비교종교학', '2020-06-04', 'officer_01'),
	('category_023', '220', '불교', '2020-06-04', 'officer_01'),
	('category_024', '230', '기독교, 천주교, 유태교', '2020-06-04', 'officer_01'),
	('category_025', '240', '도교', '2020-06-04', 'officer_01'),
	('category_026', '250', '천도교, 단군교, 대종교', '2020-06-04', 'officer_01'),
	('category_027', '270', '힌두교, 브라만교', '2020-06-04', 'officer_01'),
	('category_028', '280', '이슬람교(회교),\n조로아스터교', '2020-06-04', 'officer_01'),
	('category_029', '290', '기타 종교', '2020-06-04', 'officer_01'),
	('category_030', '300', '사회과학 일반', '2020-06-04', 'officer_01'),
	('category_031', '310', '통계학', '2020-06-04', 'officer_01'),
	('category_032', '320', '경제학, 경영학', '2020-06-04', 'officer_01'),
	('category_033', '330', '사회학, 사회복지, 사회문제', '2020-06-04', 'officer_01'),
	('category_034', '340', '정치학, 외교학', '2020-06-04', 'officer_01'),
	('category_035', '350', '행정학, 소방, 경찰', '2020-06-04', 'officer_01'),
	('category_036', '360', '법률, 법학', '2020-06-04', 'officer_01'),
	('category_037', '370', '교육학', '2020-06-04', 'officer_01'),
	('category_038', '380', '풍속, 예절, 민속학', '2020-06-04', 'officer_01'),
	('category_039', '390', '국방, 군사학', '2020-06-04', 'officer_01'),
	('category_040', '400', '자연과학 일반', '2020-06-04', 'officer_01'),
	('category_041', '410', '수학', '2020-06-04', 'officer_01'),
	('category_042', '420', '물리학', '2020-06-04', 'officer_01'),
	('category_043', '430', '화학', '2020-06-04', 'officer_01'),
	('category_044', '440', '천문학', '2020-06-04', 'officer_01'),
	('category_045', '450', '지구과학', '2020-06-04', 'officer_01'),
	('category_046', '460', '광물학', '2020-06-04', 'officer_01'),
	('category_047', '470', '생명과학', '2020-06-04', 'officer_01'),
	('category_048', '480', '식물학', '2020-06-04', 'officer_01'),
	('category_049', '490', '동물학', '2020-06-04', 'officer_01'),
	('category_050', '500', '기술과학 일반', '2020-06-04', 'officer_01'),
	('category_051', '510', '의학, 약학, 한의학,\n요가, 다이어트', '2020-06-04', 'officer_01'),
	('category_052', '520', '농학, 수의학, 축산학,\n수산학, 임업', '2020-06-04', 'officer_01'),
	('category_053', '530', '공학, 공업일반,\n토목공학, 환경공학', '2020-06-04', 'officer_01'),
	('category_054', '540', '건축, 건축학', '2020-06-04', 'officer_01'),
	('category_055', '550', '기계공학, 항공우주공학,\n원자핵공학, 자동차, 로봇', '2020-06-04', 'officer_01'),
	('category_056', '560', '전기공학, 통신공학,\n전자공학', '2020-06-04', 'officer_01'),
	('category_057', '570', '화학공학, 생명공학,\n식품공학, 연료공업 ', '2020-06-04', 'officer_01'),
	('category_058', '580', '제조업, 인쇄술', '2020-06-04', 'officer_01'),
	('category_059', '590', '생활과학, 의복,\n미용, 식음료,\n주택관리, 육아', '2020-06-04', 'officer_01'),
	('category_060', '600', '예술 일반', '2020-06-04', 'officer_01'),
	('category_061', '620', '조각 및 조형예술', '2020-06-04', 'officer_01'),
	('category_062', '630', '공예, 장식미술', '2020-06-04', 'officer_01'),
	('category_063', '640', '서예', '2020-06-04', 'officer_01'),
	('category_064', '650', '회화, 도화, 디자인', '2020-06-04', 'officer_01'),
	('category_065', '660', '사진예술', '2020-06-04', 'officer_01'),
	('category_066', '670', '음악, 국악,\n오페라, 뮤지컬', '2020-06-04', 'officer_01'),
	('category_067', '680', '공연예술, 연극,\n영화, 매체예술', '2020-06-04', 'officer_01'),
	('category_068', '690', '오락, 스포츠', '2020-06-04', 'officer_01'),
	('category_069', '700', '언어 일반', '2020-06-04', 'officer_01'),
	('category_070', '710', '한국어', '2020-06-04', 'officer_01'),
	('category_071', '720', '중국어', '2020-06-04', 'officer_01'),
	('category_072', '730', '일본어 및\n기타 아시아어', '2020-06-04', 'officer_01'),
	('category_073', '740', '영어', '2020-06-04', 'officer_01'),
	('category_074', '750', '독일어 및\n기타 게르만어', '2020-06-04', 'officer_01'),
	('category_075', '760', '프랑스어', '2020-06-04', 'officer_01'),
	('category_076', '770', '스페인어, 포르투갈어', '2020-06-04', 'officer_01'),
	('category_077', '780', '이탈리아어', '2020-06-04', 'officer_01'),
	('category_078', '790', '기타 언어', '2020-06-04', 'officer_01'),
	('category_079', '800', '문학 일반', '2020-06-04', 'officer_01'),
	('category_080', '810', '한국문학', '2020-06-04', 'officer_01'),
	('category_081', '820', '중국문학', '2020-06-04', 'officer_01'),
	('category_082', '830', '일본문학 및\n기타 아시아문학', '2020-06-04', 'officer_01'),
	('category_083', '840', '영미문학', '2020-06-04', 'officer_01'),
	('category_084', '850', '독일문학 및\n기타 게르만문학', '2020-06-04', 'officer_01'),
	('category_085', '860', '프랑스문학', '2020-06-04', 'officer_01'),
	('category_086', '870', '스페인, 포르투갈문학', '2020-06-04', 'officer_01'),
	('category_087', '880', '이탈리아문학', '2020-06-04', 'officer_01'),
	('category_088', '890', '기타 문학', '2020-06-04', 'officer_01'),
	('category_089', '900', '역사 일반', '2020-06-04', 'officer_01'),
	('category_090', '910', '아시아', '2020-06-04', 'officer_01'),
	('category_091', '920', '유럽', '2020-06-04', 'officer_01'),
	('category_092', '930', '아프리카', '2020-06-04', 'officer_01'),
	('category_093', '940', '북아메리카', '2020-06-04', 'officer_01'),
	('category_094', '950', '남아메리카(남미)', '2020-06-04', 'officer_01'),
	('category_095', '960', '오세아니아,\n양극지방', '2020-06-04', 'officer_01'),
	('category_096', '980', '지리, 관광', '2020-06-04', 'officer_01'),
	('category_097', '990', '전기, 족보', '2020-06-04', 'officer_01');
/*!40000 ALTER TABLE `tb_category` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_execution 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_execution` (
  `execution_code` varchar(30) NOT NULL COMMENT '집행코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `group_code` varchar(50) NOT NULL COMMENT '그룹코드',
  `execution_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`execution_code`),
  KEY `FK_tb_officer_TO_tb_execution` (`officer_id`),
  KEY `FK_tb_library_TO_tb_execution` (`library_code`),
  CONSTRAINT `FK_tb_library_TO_tb_execution` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_officer_TO_tb_execution` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='집행 테이블';

-- 테이블 데이터 glemfk1214.tb_execution:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_execution` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_execution` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_extend 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_extend` (
  `extend_code` varchar(30) NOT NULL COMMENT '연장코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '연장회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '연장도서코드',
  `rent_code` varchar(30) NOT NULL COMMENT '대여코드',
  `extend_date` date NOT NULL COMMENT '연장신청날짜',
  `extend_return_date` date NOT NULL COMMENT '연장반납날짜',
  `extend_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`extend_code`),
  KEY `FK_tb_officer_TO_tb_expand` (`officer_id`),
  KEY `FK_tb_library_TO_tb_expand` (`library_code`),
  KEY `FK_tb_member_TO_tb_expand` (`member_id`),
  KEY `FK_tb_rent_TO_tb_expand` (`rent_code`),
  CONSTRAINT `FK_tb_library_TO_tb_expand` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_expand` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_expand` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_rent_TO_tb_expand` FOREIGN KEY (`rent_code`) REFERENCES `tb_rent` (`rent_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='연장 테이블';

-- 테이블 데이터 glemfk1214.tb_extend:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_extend` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_extend` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_level 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_level` (
  `level_code` varchar(30) NOT NULL COMMENT '레벨코드',
  `level_name` varchar(50) NOT NULL COMMENT '레벨이름',
  `level_point` int(11) DEFAULT NULL COMMENT '레벨변동기준',
  `rent_possible_count` int(11) NOT NULL COMMENT '대여가능권수',
  `reserve_possible_count` int(11) NOT NULL COMMENT '예약가능권수',
  `level_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`level_code`),
  KEY `FK_tb_level_tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_level_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='레벨 테이블';

-- 테이블 데이터 glemfk1214.tb_level:~9 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_level` DISABLE KEYS */;
INSERT INTO `tb_level` (`level_code`, `level_name`, `level_point`, `rent_possible_count`, `reserve_possible_count`, `level_reg_date`, `officer_id`) VALUES
	('1', '관리자', NULL, 0, 0, '2020-06-04', 'officer_01'),
	('2', '사서직', NULL, 0, 0, '2020-06-04', 'officer_01'),
	('3', '회계직', NULL, 0, 0, '2020-06-04', 'officer_01'),
	('4', 'level5(우수회원)', 30, 7, 2, '2020-06-04', 'officer_01'),
	('5', 'level4(일반회원)', 20, 5, 1, '2020-06-04', 'officer_01'),
	('6', 'level3(일반회원)', 0, 5, 1, '2020-06-04', 'officer_01'),
	('7', 'level2(일반회원)', -20, 5, 1, '2020-06-04', 'officer_01'),
	('8', 'level1(제재회원)', -40, 3, 1, '2020-06-04', 'officer_01'),
	('9', 'level0(휴먼회원)', NULL, 0, 0, '2020-06-04', 'officer_01');
/*!40000 ALTER TABLE `tb_level` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_library 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_library` (
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `region_code` varchar(30) NOT NULL COMMENT '지역코드',
  `library_name` varchar(50) NOT NULL COMMENT '도서관이름',
  `library_setup` varchar(50) NOT NULL COMMENT '도서관설립주체',
  `library_open` varchar(50) NOT NULL COMMENT '도서관개관년도',
  `library_tel` varchar(30) NOT NULL COMMENT '도서관전화번호',
  `library_page` varchar(50) NOT NULL COMMENT '도서관홈페이지',
  `library_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`library_code`),
  KEY `FK_tb_library_tb_officer` (`officer_id`),
  KEY `FK_tb_library_tb_region` (`region_code`),
  CONSTRAINT `FK_tb_library_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_tb_library_tb_region` FOREIGN KEY (`region_code`) REFERENCES `tb_region` (`region_code`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서관 테이블\r\n';

-- 테이블 데이터 glemfk1214.tb_library:~4 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_library` DISABLE KEYS */;
INSERT INTO `tb_library` (`library_code`, `region_code`, `library_name`, `library_setup`, `library_open`, `library_tel`, `library_page`, `library_reg_date`, `officer_id`) VALUES
	('library_002', 'region_001', '태백교육도서관', '공공도서관', '1992-12-12', '000-111-2222', 'ttt.com', '2020-06-25', 'officer_01'),
	('library_003', 'region_142', '인천중앙 도서관', '공공도서관', '2000-12-12', '000-111-4444', 'iii.net', '2020-06-25', 'officer_01'),
	('library_004', 'region_185', '제주중앙도서관', '공공도서관', '2000-12-31', '000-444-2222', 'jjj.com', '2020-06-25', 'officer_01'),
	('library_01', 'region_181', '금암시립도서관', '공공도서관', '1991', '063-222-2222', 'page.com', '2020-05-02', 'officer_01');
/*!40000 ALTER TABLE `tb_library` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_license 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_license` (
  `license_code` varchar(30) NOT NULL COMMENT '자격증코드',
  `license_name` varchar(50) NOT NULL COMMENT '자격증이름',
  `license_issue` varchar(50) NOT NULL COMMENT '자격증발급처',
  `license_operation_date` varchar(50) NOT NULL COMMENT '자격증유효기간',
  `license_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`license_code`),
  KEY `officer_id` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_license` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='자격증 테이블';

-- 테이블 데이터 glemfk1214.tb_license:~32 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_license` DISABLE KEYS */;
INSERT INTO `tb_license` (`license_code`, `license_name`, `license_issue`, `license_operation_date`, `license_reg_date`, `officer_id`) VALUES
	('license_001', '1급정사서', '한국도서관협회', '없음', '2020-06-04', 'officer_01'),
	('license_002', '2급정사서', '한국도서관협회', '없음', '2020-06-04', 'officer_01'),
	('license_003', '준사서', '한국도서관협회', '없음', '2020-06-04', 'officer_01'),
	('license_004', '워드프로세서', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_005', '컴퓨터활용능력 2급', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_006', '컴퓨터활용능력 1급', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_007', 'ITQ Excel', '한국생산성본부', '없음', '2020-06-04', 'officer_01'),
	('license_008', 'ITQ Powerpoint', '한국생산성본부', '없음', '2020-06-04', 'officer_01'),
	('license_009', 'ITQ Word', '한국생산성본부', '없음', '2020-06-04', 'officer_01'),
	('license_010', 'ITQ OA Master', '한국생산성본부', '없음', '2020-06-04', 'officer_01'),
	('license_011', 'MOS Excel', 'YBMIT', '없음', '2020-06-04', 'officer_01'),
	('license_012', 'MOS Outlook', 'YBMIT', '없음', '2020-06-04', 'officer_01'),
	('license_013', 'MOS Powerpoint', 'YBMIT', '없음', '2020-06-04', 'officer_01'),
	('license_014', 'MOS Access', 'YBMIT', '없음', '2020-06-04', 'officer_01'),
	('license_015', 'MOS word', 'YBMIT', '없음', '2020-06-04', 'officer_01'),
	('license_016', '전산회계운용사3급', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_017', '전산회계운용사2급', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_018', '전산회계운용사1급', '대한상공회의소', '없음', '2020-06-04', 'officer_01'),
	('license_019', '전산세무2급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_020', '전산세무1급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_021', '전산회계2급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_022', '전산회계1급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_023', '세무회계3급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_024', '세무회계2급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_025', '세무회계1급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_026', '기업회계3급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_027', '기업회계2급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_028', '기업회계1급', '한국세무사회', '5년', '2020-06-04', 'officer_01'),
	('license_029', '일반행정사', '한국산업인력공단', '없음', '2020-06-04', 'officer_01'),
	('license_030', '사무자동화산업기사', '한국산업인력공단', '없음', '2020-06-04', 'officer_01'),
	('license_031', '정보처리산업기사', '한국산업인력공단', '없음', '2020-06-04', 'officer_01'),
	('license_032', '정보처리기사', '한국산업인력공단', '없음', '2020-06-04', 'officer_01');
/*!40000 ALTER TABLE `tb_license` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_lost 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_lost` (
  `lost_code` varchar(30) NOT NULL COMMENT '분실코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `rent_code` varchar(30) NOT NULL COMMENT '대여코드',
  `book_code` varchar(30) NOT NULL COMMENT '분실도서코드',
  `member_id` varchar(50) NOT NULL COMMENT '분실회원아이디',
  `lost_date` date NOT NULL COMMENT '분실날짜',
  `lost_result` varchar(50) DEFAULT NULL COMMENT '분실처리결과',
  `lost_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`lost_code`),
  KEY `FK_tb_officer_TO_tb_lost` (`officer_id`),
  KEY `FK_tb_library_TO_tb_lost` (`library_code`),
  KEY `FK_tb_rent_TO_tb_lost` (`rent_code`),
  KEY `FK_tb_book_TO_tb_lost` (`book_code`),
  KEY `FK_tb_member_TO_tb_lost` (`member_id`),
  CONSTRAINT `FK_tb_book_TO_tb_lost` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_lost` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_lost` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_lost` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_rent_TO_tb_lost` FOREIGN KEY (`rent_code`) REFERENCES `tb_rent` (`rent_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서분실 테이블';

-- 테이블 데이터 glemfk1214.tb_lost:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_lost` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_lost` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_member 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_member` (
  `member_id` varchar(50) NOT NULL COMMENT '회원아이디',
  `member_pw` varchar(50) NOT NULL COMMENT '회원패스워드',
  `member_name` varchar(50) NOT NULL COMMENT '회원이름',
  `member_birth` varchar(50) NOT NULL COMMENT '회원생년월일',
  `level_code` varchar(30) NOT NULL COMMENT '레벨코드',
  `member_address` varchar(255) NOT NULL COMMENT '회원주소',
  `member_tel` varchar(30) NOT NULL COMMENT '회원번호',
  `member_email` varchar(40) NOT NULL COMMENT '회원이메일',
  `library_code` varchar(30) NOT NULL COMMENT '회원가입을한도서관',
  `rent_count` int(11) DEFAULT NULL COMMENT '현재대여권수',
  `reserve_count` int(11) DEFAULT NULL COMMENT '현재예약권수',
  `review_count` int(11) DEFAULT NULL COMMENT '현재작성한도서평수',
  `warning_count` int(11) DEFAULT NULL COMMENT '현재신고된도서평수',
  `member_stauts` enum('대여가능','연체중','대여불가능') NOT NULL DEFAULT '대여가능' COMMENT '회원대여상태',
  `member_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) DEFAULT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`member_id`),
  KEY `FK_tb_level_TO_tb_member` (`level_code`),
  KEY `FK_tb_member_tb_library` (`library_code`),
  KEY `FK_tb_member_tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_level_TO_tb_member` FOREIGN KEY (`level_code`) REFERENCES `tb_level` (`level_code`) ON DELETE CASCADE,
  CONSTRAINT `FK_tb_member_tb_library` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`) ON DELETE CASCADE,
  CONSTRAINT `FK_tb_member_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='회원 테이블';

-- 테이블 데이터 glemfk1214.tb_member:~13 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_member` DISABLE KEYS */;
INSERT INTO `tb_member` (`member_id`, `member_pw`, `member_name`, `member_birth`, `level_code`, `member_address`, `member_tel`, `member_email`, `library_code`, `rent_count`, `reserve_count`, `review_count`, `warning_count`, `member_stauts`, `member_reg_date`, `officer_id`) VALUES
	('id001', 'pw001', '김11', '2002-06-25', '6', '강원도 태백시 ㅇㄹㄹ', '010-0000-0004', 'test04', 'library_002', 0, 0, 2, 0, '대여가능', '2020-06-25', NULL),
	('id002', 'pw002', '김02', '2020-06-15', '6', '전주시 233', '010-0000-0004', 'test04', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id004', 'pw004', 'rla02', '2020-07-15', '6', '강원도 태백시 중화산동', '3', 'test02', 'library_002', 0, 0, 0, 0, '대여가능', '2020-07-21', NULL),
	('id005', 'pw005', '김05', '2020-06-01', '6', '전주시 3 ', '010-0000-0005', 'test05', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id006', 'pw006', '김06', '2020-06-05', '6', '전라북도 전주시 우아동', '010-0000-0006', 'test06', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id007', 'pw007', 'rla07', '2020-06-24', '6', '', '010-0000-0007', 'test07', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id008', 'pw008', 'rla08', '2020-06-02', '6', '', '010-0000-0008', 'test08', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id009', 'pw009', 'rla09', '2020-06-10', '6', '강원도 태백시 213', '5', '2', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-30', NULL),
	('id4535', '23232', '234', '2020-06-18', '6', '전라북도 전주시 34', '34', '34', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('id798', '12121', '123123', '2020-06-09', '6', '전라북도 전주시 중화산동', '010-0000-00765', 'test564', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-29', NULL),
	('member_001', 'pw001', '김01', '2020-06-09', '6', '전라북도 전주시 중화산동', '010-0000-0011', 'test01@email.com', 'library_01', 0, 1, 0, 0, '대여가능', '2020-06-19', NULL),
	('member_002', 'pw002', '김02', '2020-06-09', '4', '전라북도 전주시 우아동', '010-0000-0001', 'test02@email.com', 'library_01', 3, 1, 0, 0, '대여가능', '2020-06-19', NULL),
	('member_003', 'pw12', '김3', '2009-10-25', '9', '전라북도 전주시 덕진구', '010-0000-0003', 'test03@email.com', 'library_01', 0, 0, 0, 0, '대여가능', '2020-06-25', NULL);
/*!40000 ALTER TABLE `tb_member` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_member_login 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_member_login` (
  `login_code` varchar(30) NOT NULL COMMENT '로그인코드',
  `member_id` varchar(50) NOT NULL COMMENT '로그인아이디',
  `login_date` datetime NOT NULL COMMENT '로그인시간',
  `logout_date` datetime DEFAULT NULL COMMENT '로그아웃시간',
  PRIMARY KEY (`login_code`),
  KEY `FK_tb_member_TO_tb_member_login` (`member_id`),
  CONSTRAINT `FK_tb_member_TO_tb_member_login` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='회원로그인 테이블';

-- 테이블 데이터 glemfk1214.tb_member_login:~258 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_member_login` DISABLE KEYS */;
INSERT INTO `tb_member_login` (`login_code`, `member_id`, `login_date`, `logout_date`) VALUES
	('member_login_10', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_100', 'member_001', '2020-06-30 15:16:14', '2020-06-30 15:16:16'),
	('member_login_101', 'member_001', '2020-06-30 15:34:03', NULL),
	('member_login_102', 'member_001', '2020-06-30 15:57:23', NULL),
	('member_login_103', 'member_001', '2020-06-30 17:08:04', '2020-06-30 17:08:07'),
	('member_login_104', 'member_001', '2020-06-30 17:12:46', NULL),
	('member_login_105', 'member_001', '2020-07-01 09:07:58', NULL),
	('member_login_106', 'member_001', '2020-07-01 11:53:15', NULL),
	('member_login_107', 'member_001', '2020-07-01 12:41:49', NULL),
	('member_login_108', 'member_001', '2020-07-01 14:04:47', NULL),
	('member_login_109', 'member_001', '2020-07-01 21:22:44', NULL),
	('member_login_11', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_110', 'member_001', '2020-07-02 09:05:49', NULL),
	('member_login_111', 'member_001', '2020-07-02 14:01:01', NULL),
	('member_login_112', 'member_002', '2020-07-02 15:14:18', NULL),
	('member_login_113', 'member_001', '2020-07-03 09:36:45', NULL),
	('member_login_114', 'member_001', '2020-07-03 10:20:25', NULL),
	('member_login_115', 'member_001', '2020-07-03 11:45:10', NULL),
	('member_login_116', 'member_001', '2020-07-03 11:54:59', NULL),
	('member_login_117', 'member_001', '2020-07-03 12:27:02', NULL),
	('member_login_118', 'member_001', '2020-07-03 15:40:53', NULL),
	('member_login_119', 'member_001', '2020-07-03 16:33:10', '2020-07-03 16:33:13'),
	('member_login_12', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_120', 'member_001', '2020-07-03 16:33:42', NULL),
	('member_login_121', 'member_001', '2020-07-03 16:41:42', NULL),
	('member_login_122', 'member_001', '2020-07-03 16:41:53', '2020-07-03 16:42:05'),
	('member_login_123', 'member_001', '2020-07-03 17:10:53', NULL),
	('member_login_124', 'member_001', '2020-07-06 09:07:18', NULL),
	('member_login_125', 'member_001', '2020-07-06 10:29:27', NULL),
	('member_login_126', 'member_001', '2020-07-06 12:23:51', NULL),
	('member_login_127', 'member_001', '2020-07-06 13:57:08', NULL),
	('member_login_128', 'member_001', '2020-07-06 14:06:16', NULL),
	('member_login_129', 'member_001', '2020-07-06 14:14:56', NULL),
	('member_login_13', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_130', 'member_001', '2020-07-06 15:34:08', NULL),
	('member_login_131', 'member_001', '2020-07-06 15:45:56', NULL),
	('member_login_132', 'member_001', '2020-07-06 16:19:15', NULL),
	('member_login_133', 'member_001', '2020-07-06 16:30:07', NULL),
	('member_login_134', 'member_001', '2020-07-06 16:52:14', NULL),
	('member_login_135', 'member_001', '2020-07-06 16:52:33', '2020-07-06 16:52:46'),
	('member_login_136', 'member_002', '2020-07-06 16:52:50', NULL),
	('member_login_137', 'member_002', '2020-07-06 17:16:25', NULL),
	('member_login_138', 'member_001', '2020-07-06 17:30:42', NULL),
	('member_login_139', 'member_002', '2020-07-07 09:37:12', NULL),
	('member_login_14', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_140', 'member_002', '2020-07-07 11:48:38', NULL),
	('member_login_141', 'member_001', '2020-07-08 09:07:27', NULL),
	('member_login_142', 'member_001', '2020-07-08 09:14:15', NULL),
	('member_login_143', 'member_001', '2020-07-08 09:24:44', NULL),
	('member_login_144', 'member_001', '2020-07-08 09:25:54', NULL),
	('member_login_145', 'member_001', '2020-07-08 09:26:50', NULL),
	('member_login_146', 'member_001', '2020-07-08 09:35:39', NULL),
	('member_login_147', 'member_001', '2020-07-08 09:38:37', NULL),
	('member_login_148', 'member_001', '2020-07-08 09:39:28', NULL),
	('member_login_149', 'member_001', '2020-07-08 09:41:48', NULL),
	('member_login_15', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_150', 'member_001', '2020-07-08 11:22:37', NULL),
	('member_login_151', 'member_001', '2020-07-08 11:57:42', NULL),
	('member_login_152', 'member_001', '2020-07-08 12:11:51', NULL),
	('member_login_153', 'member_001', '2020-07-08 14:03:05', NULL),
	('member_login_154', 'member_001', '2020-07-08 14:27:01', NULL),
	('member_login_155', 'member_001', '2020-07-08 16:00:54', NULL),
	('member_login_156', 'member_001', '2020-07-08 16:42:32', NULL),
	('member_login_157', 'member_001', '2020-07-13 11:06:10', '2020-07-13 11:07:27'),
	('member_login_158', 'member_001', '2020-07-13 13:55:16', NULL),
	('member_login_159', 'member_001', '2020-07-13 14:45:21', NULL),
	('member_login_16', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_160', 'member_001', '2020-07-15 10:56:26', NULL),
	('member_login_161', 'member_001', '2020-07-17 16:06:49', NULL),
	('member_login_162', 'member_001', '2020-07-20 10:41:34', NULL),
	('member_login_163', 'member_001', '2020-07-20 11:18:39', NULL),
	('member_login_164', 'member_001', '2020-07-20 11:20:13', NULL),
	('member_login_165', 'member_001', '2020-07-20 12:29:11', NULL),
	('member_login_166', 'member_001', '2020-07-20 14:31:09', NULL),
	('member_login_167', 'member_001', '2020-07-20 15:16:31', NULL),
	('member_login_168', 'member_001', '2020-07-20 15:18:12', NULL),
	('member_login_169', 'member_001', '2020-07-20 16:35:34', NULL),
	('member_login_17', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_170', 'member_002', '2020-07-20 16:39:34', NULL),
	('member_login_171', 'member_001', '2020-07-20 16:57:45', '2020-07-20 16:57:47'),
	('member_login_172', 'member_001', '2020-07-20 17:07:54', '2020-07-20 17:08:55'),
	('member_login_173', 'member_001', '2020-07-20 17:08:57', '2020-07-20 17:08:58'),
	('member_login_174', 'member_001', '2020-07-20 17:08:59', '2020-07-20 17:09:00'),
	('member_login_175', 'member_001', '2020-07-21 09:15:11', NULL),
	('member_login_176', 'member_002', '2020-07-21 10:49:23', NULL),
	('member_login_177', 'member_001', '2020-07-21 15:23:29', '2020-07-21 15:23:31'),
	('member_login_178', 'member_001', '2020-07-22 09:34:38', NULL),
	('member_login_179', 'member_001', '2020-07-22 11:14:29', NULL),
	('member_login_18', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_180', 'member_001', '2020-07-22 11:55:17', '2020-07-22 11:55:48'),
	('member_login_181', 'member_001', '2020-07-22 11:55:55', '2020-07-22 11:58:17'),
	('member_login_182', 'member_001', '2020-07-22 11:58:18', '2020-07-22 12:01:12'),
	('member_login_183', 'member_001', '2020-07-22 11:59:22', '2020-07-22 12:00:45'),
	('member_login_184', 'member_001', '2020-07-22 12:01:18', '2020-07-22 12:01:22'),
	('member_login_185', 'member_001', '2020-07-22 12:01:46', '2020-07-22 12:02:15'),
	('member_login_186', 'member_001', '2020-07-22 12:02:55', '2020-07-22 12:02:59'),
	('member_login_187', 'member_001', '2020-07-22 12:03:04', '2020-07-22 12:03:33'),
	('member_login_188', 'member_001', '2020-07-22 12:03:36', '2020-07-22 12:03:39'),
	('member_login_189', 'member_001', '2020-07-22 12:03:42', '2020-07-22 12:04:24'),
	('member_login_19', 'member_001', '2020-06-23 15:34:44', '2020-06-23 15:34:49'),
	('member_login_190', 'member_001', '2020-07-22 12:04:30', '2020-07-22 12:05:05'),
	('member_login_191', 'member_001', '2020-07-22 12:05:08', '2020-07-22 12:05:10'),
	('member_login_192', 'member_001', '2020-07-22 12:05:12', '2020-07-22 12:05:13'),
	('member_login_193', 'member_001', '2020-07-22 12:05:35', '2020-07-22 12:05:36'),
	('member_login_194', 'member_001', '2020-07-22 12:06:33', '2020-07-22 12:06:35'),
	('member_login_195', 'member_001', '2020-07-22 12:11:15', '2020-07-22 12:27:55'),
	('member_login_196', 'member_001', '2020-07-22 12:13:42', NULL),
	('member_login_197', 'member_002', '2020-07-22 12:31:29', NULL),
	('member_login_198', 'member_001', '2020-07-22 12:42:46', NULL),
	('member_login_199', 'member_001', '2020-07-22 12:44:50', NULL),
	('member_login_20', 'member_001', '2020-06-23 15:49:29', NULL),
	('member_login_200', 'member_001', '2020-07-22 13:57:34', NULL),
	('member_login_201', 'member_001', '2020-07-22 14:31:37', NULL),
	('member_login_202', 'member_001', '2020-07-22 14:53:00', '2020-07-22 15:09:20'),
	('member_login_203', 'member_001', '2020-07-22 15:10:09', NULL),
	('member_login_204', 'member_001', '2020-07-22 15:21:00', NULL),
	('member_login_205', 'member_001', '2020-07-22 15:48:21', NULL),
	('member_login_206', 'member_001', '2020-07-22 16:53:42', NULL),
	('member_login_207', 'member_001', '2020-07-22 17:30:49', NULL),
	('member_login_208', 'member_001', '2020-07-22 18:54:46', NULL),
	('member_login_209', 'member_001', '2020-07-22 19:08:14', '2020-07-22 19:09:05'),
	('member_login_21', 'member_001', '2020-06-23 15:51:37', '2020-06-23 15:51:49'),
	('member_login_210', 'member_001', '2020-07-22 22:13:41', NULL),
	('member_login_211', 'member_001', '2020-07-22 22:21:59', NULL),
	('member_login_212', 'member_001', '2020-07-22 23:36:05', NULL),
	('member_login_213', 'member_001', '2020-07-23 02:35:19', NULL),
	('member_login_214', 'member_001', '2020-07-23 04:15:21', '2020-07-23 04:15:33'),
	('member_login_215', 'member_002', '2020-07-23 11:45:20', NULL),
	('member_login_216', 'member_001', '2020-07-23 13:50:23', NULL),
	('member_login_217', 'member_001', '2020-07-23 14:01:04', NULL),
	('member_login_218', 'member_001', '2020-07-23 14:33:50', NULL),
	('member_login_219', 'member_001', '2020-07-23 15:18:03', NULL),
	('member_login_22', 'member_001', '2020-06-23 15:52:53', NULL),
	('member_login_220', 'member_001', '2020-07-23 16:36:12', NULL),
	('member_login_221', 'member_001', '2020-07-23 16:39:41', NULL),
	('member_login_222', 'member_002', '2020-07-23 17:08:31', '2020-07-23 17:14:12'),
	('member_login_223', 'member_001', '2020-07-23 17:14:14', NULL),
	('member_login_224', 'member_001', '2020-07-23 17:18:13', NULL),
	('member_login_225', 'member_001', '2020-07-24 00:04:42', NULL),
	('member_login_226', 'member_001', '2020-07-24 02:43:44', NULL),
	('member_login_227', 'member_001', '2020-07-24 02:46:27', NULL),
	('member_login_228', 'member_001', '2020-07-24 03:05:46', '2020-07-24 03:06:01'),
	('member_login_229', 'member_001', '2020-07-24 03:06:45', '2020-07-24 03:06:55'),
	('member_login_23', 'member_001', '2020-06-23 16:12:21', NULL),
	('member_login_230', 'member_001', '2020-07-24 09:47:21', '2020-07-24 09:47:31'),
	('member_login_231', 'member_001', '2020-07-24 10:17:27', NULL),
	('member_login_232', 'member_001', '2020-07-24 10:17:41', NULL),
	('member_login_233', 'member_001', '2020-07-24 10:22:33', NULL),
	('member_login_234', 'member_001', '2020-07-24 10:38:59', NULL),
	('member_login_235', 'member_001', '2020-07-24 11:15:53', NULL),
	('member_login_236', 'member_002', '2020-07-24 11:16:02', NULL),
	('member_login_237', 'member_001', '2020-07-24 11:18:38', NULL),
	('member_login_238', 'member_002', '2020-07-24 11:40:26', NULL),
	('member_login_239', 'member_001', '2020-07-24 13:31:44', '2020-07-24 13:31:47'),
	('member_login_24', 'member_001', '2020-06-23 16:33:41', NULL),
	('member_login_240', 'member_001', '2020-07-24 13:55:28', '2020-07-24 13:55:30'),
	('member_login_241', 'member_001', '2020-07-24 13:55:59', '2020-07-24 14:09:49'),
	('member_login_242', 'member_001', '2020-07-24 13:56:46', NULL),
	('member_login_243', 'member_001', '2020-07-24 14:29:26', '2020-07-24 15:19:25'),
	('member_login_244', 'member_001', '2020-07-24 15:52:22', NULL),
	('member_login_245', 'member_001', '2020-07-24 16:40:25', NULL),
	('member_login_246', 'member_001', '2020-07-27 10:44:03', NULL),
	('member_login_247', 'member_001', '2020-07-27 11:50:30', NULL),
	('member_login_248', 'member_001', '2020-07-27 12:21:46', NULL),
	('member_login_249', 'member_001', '2020-07-28 15:11:28', NULL),
	('member_login_25', 'member_001', '2020-06-23 16:47:26', NULL),
	('member_login_250', 'member_001', '2020-07-28 15:12:12', NULL),
	('member_login_251', 'member_002', '2020-07-28 15:12:56', NULL),
	('member_login_252', 'member_001', '2020-07-28 15:14:16', NULL),
	('member_login_253', 'member_001', '2020-07-29 09:07:23', '2020-07-29 09:07:53'),
	('member_login_254', 'member_001', '2020-07-30 10:15:20', NULL),
	('member_login_255', 'member_001', '2020-07-31 08:04:34', NULL),
	('member_login_256', 'member_001', '2020-08-03 15:56:23', NULL),
	('member_login_257', 'member_001', '2020-08-03 16:08:26', NULL),
	('member_login_258', 'member_001', '2020-08-04 14:59:05', NULL),
	('member_login_259', 'member_001', '2020-08-05 09:55:22', NULL),
	('member_login_26', 'member_001', '2020-06-23 17:13:49', '2020-06-23 17:29:37'),
	('member_login_260', 'member_001', '2020-08-07 17:25:20', NULL),
	('member_login_261', 'member_001', '2020-08-10 19:08:00', '2020-08-10 19:08:07'),
	('member_login_262', 'member_001', '2020-08-12 13:56:34', NULL),
	('member_login_263', 'member_001', '2020-08-12 14:35:59', NULL),
	('member_login_264', 'member_001', '2020-08-12 14:44:25', NULL),
	('member_login_27', 'member_001', '2020-06-23 17:17:04', NULL),
	('member_login_28', 'member_001', '2020-06-23 17:17:07', NULL),
	('member_login_29', 'member_001', '2020-06-23 17:17:10', NULL),
	('member_login_30', 'member_001', '2020-06-23 17:17:16', NULL),
	('member_login_31', 'member_001', '2020-06-23 17:18:03', NULL),
	('member_login_32', 'member_001', '2020-06-23 17:18:22', NULL),
	('member_login_33', 'member_001', '2020-06-23 17:18:35', NULL),
	('member_login_34', 'member_001', '2020-06-23 17:18:36', NULL),
	('member_login_35', 'member_001', '2020-06-23 17:19:08', NULL),
	('member_login_36', 'member_001', '2020-06-23 17:20:14', NULL),
	('member_login_37', 'member_001', '2020-06-23 17:22:57', NULL),
	('member_login_38', 'member_001', '2020-06-23 17:26:23', '2020-06-23 17:26:25'),
	('member_login_39', 'member_001', '2020-06-23 17:26:29', '2020-06-23 17:26:31'),
	('member_login_40', 'member_001', '2020-06-23 17:27:03', '2020-06-23 17:27:06'),
	('member_login_41', 'member_001', '2020-06-23 17:30:36', '2020-06-23 17:30:44'),
	('member_login_42', 'member_001', '2020-06-24 12:20:48', '2020-06-24 12:24:25'),
	('member_login_43', 'member_001', '2020-06-24 12:42:55', NULL),
	('member_login_44', 'member_001', '2020-06-24 12:44:24', NULL),
	('member_login_45', 'member_001', '2020-06-24 14:40:16', NULL),
	('member_login_46', 'member_001', '2020-06-24 15:21:30', NULL),
	('member_login_47', 'member_003', '2020-06-25 09:17:56', NULL),
	('member_login_48', 'member_001', '2020-06-25 09:21:00', NULL),
	('member_login_49', 'member_001', '2020-06-25 10:44:53', NULL),
	('member_login_50', 'member_001', '2020-06-25 10:51:21', NULL),
	('member_login_51', 'member_001', '2020-06-25 14:13:29', NULL),
	('member_login_52', 'id001', '2020-06-25 14:30:28', '2020-06-25 14:30:34'),
	('member_login_53', 'member_001', '2020-06-25 14:32:53', '2020-06-25 14:32:54'),
	('member_login_54', 'member_001', '2020-06-25 14:52:25', '2020-06-25 14:54:02'),
	('member_login_55', 'member_001', '2020-06-25 15:34:48', NULL),
	('member_login_56', 'member_001', '2020-06-26 09:23:54', NULL),
	('member_login_57', 'member_001', '2020-06-26 09:26:39', NULL),
	('member_login_58', 'member_001', '2020-06-26 09:26:47', NULL),
	('member_login_59', 'member_001', '2020-06-26 09:35:12', NULL),
	('member_login_60', 'member_001', '2020-06-26 09:36:59', NULL),
	('member_login_61', 'member_001', '2020-06-26 12:08:21', NULL),
	('member_login_62', 'member_001', '2020-06-26 14:17:37', NULL),
	('member_login_63', 'member_001', '2020-06-26 14:18:13', NULL),
	('member_login_64', 'member_001', '2020-06-26 14:18:21', NULL),
	('member_login_65', 'member_001', '2020-06-26 14:18:29', NULL),
	('member_login_66', 'member_001', '2020-06-26 14:18:58', NULL),
	('member_login_67', 'member_001', '2020-06-26 14:19:22', NULL),
	('member_login_68', 'member_001', '2020-06-26 14:20:06', NULL),
	('member_login_69', 'member_001', '2020-06-26 14:20:39', NULL),
	('member_login_7', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_70', 'member_001', '2020-06-26 14:53:13', '2020-06-26 14:53:17'),
	('member_login_71', 'member_001', '2020-06-26 14:53:36', NULL),
	('member_login_72', 'member_001', '2020-06-26 14:54:02', NULL),
	('member_login_73', 'member_001', '2020-06-26 14:54:15', NULL),
	('member_login_74', 'member_001', '2020-06-26 14:54:22', NULL),
	('member_login_75', 'member_001', '2020-06-26 15:03:47', NULL),
	('member_login_76', 'member_001', '2020-06-26 15:08:19', NULL),
	('member_login_77', 'member_001', '2020-06-26 15:08:24', '2020-06-26 15:08:25'),
	('member_login_78', 'member_001', '2020-06-26 15:09:37', NULL),
	('member_login_79', 'member_001', '2020-06-26 15:09:39', NULL),
	('member_login_8', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_80', 'member_001', '2020-06-26 15:18:59', '2020-06-26 15:19:22'),
	('member_login_81', 'member_001', '2020-06-26 15:49:59', NULL),
	('member_login_82', 'member_001', '2020-06-26 17:14:19', '2020-06-26 17:14:34'),
	('member_login_83', 'member_001', '2020-06-26 17:21:34', NULL),
	('member_login_84', 'member_001', '2020-06-26 17:35:30', NULL),
	('member_login_85', 'member_001', '2020-06-26 17:36:04', NULL),
	('member_login_86', 'member_001', '2020-06-26 20:25:07', NULL),
	('member_login_87', 'member_001', '2020-06-29 09:07:36', NULL),
	('member_login_88', 'member_001', '2020-06-29 09:18:12', NULL),
	('member_login_89', 'member_001', '2020-06-29 11:26:12', NULL),
	('member_login_9', 'member_001', '2020-06-23 00:00:00', '2020-06-23 00:00:00'),
	('member_login_90', 'member_001', '2020-06-29 16:51:40', NULL),
	('member_login_91', 'member_001', '2020-06-29 17:18:10', '2020-06-29 17:20:43'),
	('member_login_92', 'member_001', '2020-06-30 09:47:01', NULL),
	('member_login_93', 'member_001', '2020-06-30 11:55:03', '2020-06-30 12:07:41'),
	('member_login_94', 'member_001', '2020-06-30 15:14:04', '2020-06-30 15:14:05'),
	('member_login_95', 'member_001', '2020-06-30 15:15:15', '2020-06-30 15:15:16'),
	('member_login_96', 'member_001', '2020-06-30 15:15:30', NULL),
	('member_login_97', 'member_001', '2020-06-30 15:15:31', '2020-06-30 15:15:32'),
	('member_login_98', 'member_001', '2020-06-30 15:15:41', NULL),
	('member_login_99', 'member_001', '2020-06-30 15:15:47', '2020-06-30 15:15:48');
/*!40000 ALTER TABLE `tb_member_login` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_officer 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_officer` (
  `officer_id` varchar(50) NOT NULL COMMENT '직원아이디',
  `officer_pw` varchar(50) NOT NULL COMMENT '직원패스워드',
  `officer_name` varchar(50) NOT NULL COMMENT '직원이름',
  `officer_birth` varchar(50) NOT NULL COMMENT '직원생년월일',
  `level_code` varchar(30) NOT NULL COMMENT '레벨코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `officer_address` varchar(255) NOT NULL COMMENT '직원주소',
  `officer_tel` varchar(30) NOT NULL COMMENT '직원번호',
  `officer_email` varchar(40) NOT NULL COMMENT '직원이메일',
  `officer_reg_date` date NOT NULL COMMENT '등록날짜',
  PRIMARY KEY (`officer_id`),
  KEY `FK_tb_level_TO_tb_officer` (`level_code`),
  KEY `FK_tb_library_TO_tb_officer` (`library_code`),
  CONSTRAINT `FK_tb_level_TO_tb_officer` FOREIGN KEY (`level_code`) REFERENCES `tb_level` (`level_code`) ON UPDATE CASCADE,
  CONSTRAINT `FK_tb_library_TO_tb_officer` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='직원 테이블';

-- 테이블 데이터 glemfk1214.tb_officer:~11 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_officer` DISABLE KEYS */;
INSERT INTO `tb_officer` (`officer_id`, `officer_pw`, `officer_name`, `officer_birth`, `level_code`, `library_code`, `officer_address`, `officer_tel`, `officer_email`, `officer_reg_date`) VALUES
	('officer_01', 'pw001', '홍길동', '941111', '2', 'library_01', '완주시 완주군', '010-1234-7787', 'hong2@library.com', '2020-06-29'),
	('officer_02', 'pw00002', '수정됨', '19941214', '2', 'library_01', '전주시 완산구', '01090600342', 'tnwjd@library.com', '2020-06-04'),
	('officer_03', 'pw003', '유관순', '19941215', '2', 'library_01', '전주시 완산구', '010-0000-0002', 'ASD@library.com', '2020-06-15'),
	('officer_04', 'pw004', '장보고', '19941215', '2', 'library_01', '전주시 완산구', '010-0000-0002', 'ASD@library.com', '2020-06-15'),
	('officer_05', 'pw005', '대조영', '19940215', '3', 'library_01', '전주시 완산구', '010-0000-0002', 'qwe@library.com', '2020-06-22'),
	('officer_06', 'pw006', '박명수', '19941211', '2', 'library_01', '전주시 완산구', '010-0000-0011', 'aqw@library.com', '2020-06-22'),
	('officer_07', 'pw007', '김길동', '1994-12-14', '2', 'library_01', '전주시 덕진구', '010-4856-1248', 'kim@library.com', '2020-06-25'),
	('officer_08', 'pw008', '허준', '12140123', '2', 'library_01', '전주시 덕진구', '010-4856-4545', 'heojun@library.com', '2020-06-26'),
	('officer_09', 'pw009', '노홍철', '19940122', '2', 'library_004', '전주시 덕진구', '010-4856-1285', 'kim@library.com', '2020-06-29'),
	('officer_10', 'pw010', '최지우', '19970328', '3', 'library_004', '전주시 완산구', '01097003280', 'haha@library.com', '2020-06-29'),
	('officer_11', 'pw011', '정형돈', '900112', '3', 'library_004', '전주시 덕진구', '010-4856-1248', '123123', '2020-06-29');
/*!40000 ALTER TABLE `tb_officer` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_officer_license 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_officer_license` (
  `officer_license_code` varchar(30) NOT NULL COMMENT '직원자격증코드',
  `officer_id` varchar(50) NOT NULL COMMENT '직원아이디',
  `license_code` varchar(30) DEFAULT NULL COMMENT '자격증코드',
  `officer_license_date` date NOT NULL COMMENT '직원자격증취득날짜',
  `officer_license_reg_date` date NOT NULL COMMENT '등록날짜',
  `license_name` varchar(50) DEFAULT NULL COMMENT '자격증 이름',
  PRIMARY KEY (`officer_license_code`),
  KEY `FK_tb_license_TO_tb_officer_license` (`license_code`),
  KEY `FK_tb_officer_TO_tb_officer_license` (`officer_id`),
  CONSTRAINT `FK_tb_license_TO_tb_officer_license` FOREIGN KEY (`license_code`) REFERENCES `tb_license` (`license_code`),
  CONSTRAINT `FK_tb_officer_TO_tb_officer_license` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='직원자격증 테이블';

-- 테이블 데이터 glemfk1214.tb_officer_license:~6 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_officer_license` DISABLE KEYS */;
INSERT INTO `tb_officer_license` (`officer_license_code`, `officer_id`, `license_code`, `officer_license_date`, `officer_license_reg_date`, `license_name`) VALUES
	('officer_license_001', 'officer_01', 'license_001', '2020-06-04', '2020-06-04', '1급정사서'),
	('officer_license_002', 'officer_02', 'license_002', '2020-06-04', '2020-06-22', '2급정사서'),
	('officer_license_003', 'officer_03', 'license_003', '2020-06-22', '2020-06-22', '준사서'),
	('officer_license_004', 'officer_01', 'license_010', '2020-06-30', '2020-06-30', '1급정사서'),
	('officer_license_005', 'officer_05', NULL, '2020-06-30', '2020-06-30', NULL),
	('officer_license_006', 'officer_01', NULL, '2020-06-11', '2020-07-01', '운전면허 1종');
/*!40000 ALTER TABLE `tb_officer_license` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_officer_login 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_officer_login` (
  `login_code` varchar(30) NOT NULL COMMENT '로그인코드',
  `officer_id` varchar(50) NOT NULL COMMENT '로그인아이디',
  `login_date` date NOT NULL COMMENT '로그인시간',
  `logout_date` date DEFAULT NULL COMMENT '로그아웃시간',
  PRIMARY KEY (`login_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='직원로그인 테이블';

-- 테이블 데이터 glemfk1214.tb_officer_login:~362 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_officer_login` DISABLE KEYS */;
INSERT INTO `tb_officer_login` (`login_code`, `officer_id`, `login_date`, `logout_date`) VALUES
	('officer_login_1', 'officer_01', '2020-06-19', NULL),
	('officer_login_10', 'officer_01', '2020-06-22', NULL),
	('officer_login_100', 'officer_01', '2020-06-29', NULL),
	('officer_login_101', 'officer_01', '2020-06-29', NULL),
	('officer_login_102', 'officer_01', '2020-06-29', NULL),
	('officer_login_103', 'officer_01', '2020-06-29', NULL),
	('officer_login_104', 'officer_01', '2020-06-29', NULL),
	('officer_login_105', 'officer_01', '2020-06-29', NULL),
	('officer_login_106', 'officer_01', '2020-06-29', NULL),
	('officer_login_107', 'officer_01', '2020-06-29', NULL),
	('officer_login_108', 'officer_01', '2020-06-29', NULL),
	('officer_login_109', 'officer_01', '2020-06-29', '2020-06-29'),
	('officer_login_11', 'officer_01', '2020-06-22', NULL),
	('officer_login_110', 'officer_01', '2020-06-29', NULL),
	('officer_login_111', 'officer_01', '2020-06-29', NULL),
	('officer_login_112', 'officer_01', '2020-06-29', NULL),
	('officer_login_113', 'officer_01', '2020-06-29', NULL),
	('officer_login_114', 'officer_01', '2020-06-30', NULL),
	('officer_login_115', 'officer_01', '2020-06-30', NULL),
	('officer_login_116', 'officer_01', '2020-06-30', NULL),
	('officer_login_117', 'officer_03', '2020-06-30', NULL),
	('officer_login_118', 'officer_03', '2020-06-30', NULL),
	('officer_login_119', 'officer_01', '2020-06-30', NULL),
	('officer_login_12', 'officer_01', '2020-06-22', NULL),
	('officer_login_120', 'officer_01', '2020-06-30', '2020-06-30'),
	('officer_login_121', 'officer_01', '2020-06-30', '2020-06-30'),
	('officer_login_122', 'officer_01', '2020-06-30', '2020-06-30'),
	('officer_login_123', 'officer_01', '2020-06-30', NULL),
	('officer_login_124', 'officer_01', '2020-06-30', NULL),
	('officer_login_125', 'officer_03', '2020-06-30', NULL),
	('officer_login_126', 'officer_01', '2020-06-30', NULL),
	('officer_login_127', 'officer_01', '2020-06-30', NULL),
	('officer_login_128', 'officer_01', '2020-06-30', NULL),
	('officer_login_129', 'officer_01', '2020-06-30', NULL),
	('officer_login_13', 'officer_02', '2020-06-22', NULL),
	('officer_login_130', 'officer_01', '2020-06-30', NULL),
	('officer_login_131', 'officer_01', '2020-06-30', NULL),
	('officer_login_132', 'officer_01', '2020-06-30', NULL),
	('officer_login_133', 'officer_01', '2020-06-30', NULL),
	('officer_login_134', 'officer_01', '2020-06-30', NULL),
	('officer_login_135', 'officer_01', '2020-06-30', NULL),
	('officer_login_136', 'officer_03', '2020-06-30', NULL),
	('officer_login_137', 'officer_01', '2020-07-01', NULL),
	('officer_login_138', 'officer_01', '2020-07-01', NULL),
	('officer_login_139', 'officer_01', '2020-07-01', NULL),
	('officer_login_14', 'officer_01', '2020-06-23', NULL),
	('officer_login_140', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_141', 'officer_03', '2020-07-01', NULL),
	('officer_login_142', 'officer_01', '2020-07-01', NULL),
	('officer_login_143', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_144', 'officer_01', '2020-07-01', NULL),
	('officer_login_145', 'officer_03', '2020-07-01', NULL),
	('officer_login_146', 'officer_03', '2020-07-01', NULL),
	('officer_login_147', 'officer_03', '2020-07-01', NULL),
	('officer_login_148', 'officer_01', '2020-07-01', NULL),
	('officer_login_149', 'officer_01', '2020-07-01', NULL),
	('officer_login_15', 'officer_01', '2020-06-23', NULL),
	('officer_login_150', 'officer_03', '2020-07-01', '2020-07-01'),
	('officer_login_151', 'officer_01', '2020-07-01', NULL),
	('officer_login_152', 'officer_01', '2020-07-01', NULL),
	('officer_login_153', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_154', 'officer_01', '2020-07-01', NULL),
	('officer_login_155', 'officer_01', '2020-07-01', NULL),
	('officer_login_156', 'officer_01', '2020-07-01', NULL),
	('officer_login_157', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_158', 'officer_01', '2020-07-01', NULL),
	('officer_login_159', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_16', 'officer_01', '2020-06-23', NULL),
	('officer_login_160', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_161', 'officer_01', '2020-07-01', NULL),
	('officer_login_162', 'officer_01', '2020-07-01', NULL),
	('officer_login_163', 'officer_01', '2020-07-01', NULL),
	('officer_login_164', 'officer_01', '2020-07-01', NULL),
	('officer_login_165', 'officer_01', '2020-07-01', NULL),
	('officer_login_166', 'officer_01', '2020-07-01', NULL),
	('officer_login_167', 'officer_01', '2020-07-01', NULL),
	('officer_login_168', 'officer_01', '2020-07-01', NULL),
	('officer_login_169', 'officer_01', '2020-07-01', NULL),
	('officer_login_17', 'officer_01', '2020-06-23', NULL),
	('officer_login_170', 'officer_01', '2020-07-01', NULL),
	('officer_login_171', 'officer_01', '2020-07-01', NULL),
	('officer_login_172', 'officer_01', '2020-07-01', NULL),
	('officer_login_173', 'officer_01', '2020-07-01', NULL),
	('officer_login_174', 'officer_01', '2020-07-01', NULL),
	('officer_login_175', 'officer_01', '2020-07-01', NULL),
	('officer_login_176', 'officer_01', '2020-07-01', NULL),
	('officer_login_177', 'officer_01', '2020-07-01', NULL),
	('officer_login_178', 'officer_01', '2020-07-01', NULL),
	('officer_login_179', 'officer_01', '2020-07-01', NULL),
	('officer_login_18', 'officer_01', '2020-06-23', NULL),
	('officer_login_180', 'officer_01', '2020-07-01', NULL),
	('officer_login_181', 'officer_01', '2020-07-01', NULL),
	('officer_login_182', 'officer_01', '2020-07-01', NULL),
	('officer_login_183', 'officer_01', '2020-07-01', NULL),
	('officer_login_184', 'officer_01', '2020-07-01', NULL),
	('officer_login_185', 'officer_01', '2020-07-01', NULL),
	('officer_login_186', 'officer_01', '2020-07-01', NULL),
	('officer_login_187', 'officer_01', '2020-07-01', NULL),
	('officer_login_188', 'officer_01', '2020-07-01', NULL),
	('officer_login_189', 'officer_01', '2020-07-01', '2020-07-01'),
	('officer_login_19', 'officer_01', '2020-06-23', NULL),
	('officer_login_190', 'officer_01', '2020-07-01', NULL),
	('officer_login_191', 'officer_03', '2020-07-01', NULL),
	('officer_login_192', 'officer_01', '2020-07-01', NULL),
	('officer_login_193', 'officer_01', '2020-07-01', NULL),
	('officer_login_194', 'officer_01', '2020-07-01', NULL),
	('officer_login_195', 'officer_01', '2020-07-01', NULL),
	('officer_login_196', 'officer_03', '2020-07-02', NULL),
	('officer_login_197', 'officer_01', '2020-07-02', '2020-07-02'),
	('officer_login_198', 'officer_03', '2020-07-02', NULL),
	('officer_login_199', 'officer_01', '2020-07-02', NULL),
	('officer_login_2', 'officer_01', '2020-06-19', NULL),
	('officer_login_20', 'officer_01', '2020-06-23', NULL),
	('officer_login_200', 'officer_01', '2020-07-02', NULL),
	('officer_login_201', 'officer_03', '2020-07-02', '2020-07-02'),
	('officer_login_202', 'officer_03', '2020-07-02', NULL),
	('officer_login_203', 'officer_03', '2020-07-02', NULL),
	('officer_login_204', 'officer_01', '2020-07-02', NULL),
	('officer_login_205', 'officer_03', '2020-07-02', NULL),
	('officer_login_206', 'officer_03', '2020-07-02', NULL),
	('officer_login_207', 'officer_03', '2020-07-03', NULL),
	('officer_login_208', 'officer_03', '2020-07-03', NULL),
	('officer_login_209', 'officer_03', '2020-07-03', NULL),
	('officer_login_21', 'officer_01', '2020-06-23', '2020-06-23'),
	('officer_login_210', 'officer_01', '2020-07-03', NULL),
	('officer_login_211', 'officer_01', '2020-07-03', NULL),
	('officer_login_212', 'officer_01', '2020-07-03', NULL),
	('officer_login_213', 'officer_01', '2020-07-03', NULL),
	('officer_login_214', 'officer_03', '2020-07-03', NULL),
	('officer_login_215', 'officer_01', '2020-07-03', '2020-07-03'),
	('officer_login_216', 'officer_03', '2020-07-03', NULL),
	('officer_login_217', 'officer_03', '2020-07-03', NULL),
	('officer_login_218', 'officer_01', '2020-07-03', NULL),
	('officer_login_219', 'officer_03', '2020-07-03', NULL),
	('officer_login_22', 'officer_01', '2020-06-23', NULL),
	('officer_login_220', 'officer_03', '2020-07-03', NULL),
	('officer_login_221', 'officer_01', '2020-07-03', NULL),
	('officer_login_222', 'officer_01', '2020-07-03', NULL),
	('officer_login_223', 'officer_01', '2020-07-06', NULL),
	('officer_login_224', 'officer_01', '2020-07-06', NULL),
	('officer_login_225', 'officer_01', '2020-07-06', NULL),
	('officer_login_226', 'officer_01', '2020-07-06', NULL),
	('officer_login_227', 'officer_01', '2020-07-06', NULL),
	('officer_login_228', 'officer_01', '2020-07-06', NULL),
	('officer_login_229', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_23', 'officer_01', '2020-06-23', NULL),
	('officer_login_230', 'officer_01', '2020-07-06', NULL),
	('officer_login_231', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_232', 'officer_01', '2020-07-06', NULL),
	('officer_login_233', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_234', 'officer_03', '2020-07-06', '2020-07-06'),
	('officer_login_235', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_236', 'officer_01', '2020-07-06', NULL),
	('officer_login_237', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_238', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_239', 'officer_01', '2020-07-06', '2020-07-06'),
	('officer_login_24', 'officer_01', '2020-06-23', NULL),
	('officer_login_240', 'officer_02', '2020-07-06', NULL),
	('officer_login_241', 'officer_01', '2020-07-06', NULL),
	('officer_login_242', 'officer_01', '2020-07-07', NULL),
	('officer_login_243', 'officer_01', '2020-07-07', NULL),
	('officer_login_244', 'officer_01', '2020-07-07', NULL),
	('officer_login_245', 'officer_01', '2020-07-08', NULL),
	('officer_login_246', 'officer_01', '2020-07-08', '2020-07-08'),
	('officer_login_247', 'officer_03', '2020-07-08', '2020-07-08'),
	('officer_login_248', 'officer_01', '2020-07-13', NULL),
	('officer_login_249', 'officer_01', '2020-07-13', NULL),
	('officer_login_25', 'officer_01', '2020-06-23', NULL),
	('officer_login_250', 'officer_01', '2020-07-13', NULL),
	('officer_login_251', 'officer_01', '2020-07-13', '2020-07-13'),
	('officer_login_252', 'officer_01', '2020-07-13', NULL),
	('officer_login_253', 'officer_01', '2020-07-16', NULL),
	('officer_login_254', 'officer_01', '2020-07-16', NULL),
	('officer_login_255', 'officer_01', '2020-07-16', NULL),
	('officer_login_256', 'officer_01', '2020-07-17', NULL),
	('officer_login_257', 'officer_01', '2020-07-17', '2020-07-17'),
	('officer_login_258', 'officer_03', '2020-07-17', NULL),
	('officer_login_259', 'officer_01', '2020-07-20', NULL),
	('officer_login_26', 'officer_01', '2020-06-23', NULL),
	('officer_login_260', 'officer_01', '2020-07-20', NULL),
	('officer_login_261', 'officer_01', '2020-07-20', NULL),
	('officer_login_262', 'officer_01', '2020-07-20', '2020-07-20'),
	('officer_login_263', 'officer_01', '2020-07-20', '2020-07-20'),
	('officer_login_264', 'officer_01', '2020-07-20', '2020-07-20'),
	('officer_login_265', 'officer_01', '2020-07-20', NULL),
	('officer_login_266', 'officer_01', '2020-07-20', NULL),
	('officer_login_267', 'officer_01', '2020-07-21', NULL),
	('officer_login_268', 'officer_01', '2020-07-21', NULL),
	('officer_login_269', 'officer_01', '2020-07-21', NULL),
	('officer_login_27', 'officer_01', '2020-06-23', NULL),
	('officer_login_270', 'officer_01', '2020-07-21', NULL),
	('officer_login_271', 'officer_01', '2020-07-21', '2020-07-21'),
	('officer_login_272', 'officer_03', '2020-07-21', NULL),
	('officer_login_273', 'officer_01', '2020-07-21', '2020-07-21'),
	('officer_login_274', 'officer_01', '2020-07-21', NULL),
	('officer_login_275', 'officer_01', '2020-07-21', NULL),
	('officer_login_276', 'officer_01', '2020-07-21', NULL),
	('officer_login_277', 'officer_01', '2020-07-22', NULL),
	('officer_login_278', 'officer_01', '2020-07-22', NULL),
	('officer_login_279', 'officer_01', '2020-07-22', NULL),
	('officer_login_28', 'officer_01', '2020-06-23', NULL),
	('officer_login_280', 'officer_01', '2020-07-22', NULL),
	('officer_login_281', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_282', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_283', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_284', 'officer_01', '2020-07-22', NULL),
	('officer_login_285', 'officer_01', '2020-07-22', NULL),
	('officer_login_286', 'officer_01', '2020-07-22', NULL),
	('officer_login_287', 'officer_01', '2020-07-22', NULL),
	('officer_login_288', 'officer_01', '2020-07-22', NULL),
	('officer_login_289', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_29', 'officer_01', '2020-06-23', NULL),
	('officer_login_290', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_291', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_292', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_293', 'officer_03', '2020-07-22', '2020-07-22'),
	('officer_login_294', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_295', 'officer_01', '2020-07-22', NULL),
	('officer_login_296', 'officer_01', '2020-07-22', NULL),
	('officer_login_297', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_298', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_299', 'officer_03', '2020-07-22', NULL),
	('officer_login_3', 'officer_01', '2020-06-19', NULL),
	('officer_login_30', 'officer_01', '2020-06-23', '2020-06-23'),
	('officer_login_300', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_301', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_302', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_303', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_304', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_305', 'officer_01', '2020-07-22', NULL),
	('officer_login_306', 'officer_01', '2020-07-22', NULL),
	('officer_login_307', 'officer_01', '2020-07-22', NULL),
	('officer_login_308', 'officer_01', '2020-07-22', NULL),
	('officer_login_309', 'officer_01', '2020-07-22', NULL),
	('officer_login_31', 'officer_01', '2020-06-23', NULL),
	('officer_login_310', 'officer_01', '2020-07-22', '2020-07-22'),
	('officer_login_311', 'officer_01', '2020-07-23', NULL),
	('officer_login_312', 'officer_01', '2020-07-23', NULL),
	('officer_login_313', 'officer_01', '2020-07-23', NULL),
	('officer_login_314', 'officer_01', '2020-07-23', '2020-07-23'),
	('officer_login_315', 'officer_01', '2020-07-23', NULL),
	('officer_login_316', 'officer_01', '2020-07-23', NULL),
	('officer_login_317', 'officer_01', '2020-07-23', '2020-07-23'),
	('officer_login_318', 'officer_01', '2020-07-23', '2020-07-23'),
	('officer_login_319', 'officer_01', '2020-07-23', NULL),
	('officer_login_32', 'officer_01', '2020-06-23', NULL),
	('officer_login_320', 'officer_01', '2020-07-23', NULL),
	('officer_login_321', 'officer_01', '2020-07-24', NULL),
	('officer_login_322', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_323', 'officer_01', '2020-07-24', NULL),
	('officer_login_324', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_325', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_326', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_327', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_328', 'officer_01', '2020-07-24', NULL),
	('officer_login_329', 'officer_01', '2020-07-24', NULL),
	('officer_login_33', 'officer_01', '2020-06-23', NULL),
	('officer_login_330', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_331', 'officer_01', '2020-07-24', NULL),
	('officer_login_332', 'officer_01', '2020-07-24', NULL),
	('officer_login_333', 'officer_01', '2020-07-24', NULL),
	('officer_login_334', 'officer_01', '2020-07-24', NULL),
	('officer_login_335', 'officer_01', '2020-07-24', NULL),
	('officer_login_336', 'officer_01', '2020-07-24', NULL),
	('officer_login_337', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_338', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_339', 'officer_03', '2020-07-24', NULL),
	('officer_login_34', 'officer_01', '2020-06-23', NULL),
	('officer_login_340', 'officer_01', '2020-07-24', NULL),
	('officer_login_341', 'officer_01', '2020-07-24', '2020-07-24'),
	('officer_login_342', 'officer_01', '2020-07-24', NULL),
	('officer_login_343', 'officer_01', '2020-07-24', NULL),
	('officer_login_344', 'officer_01', '2020-07-24', NULL),
	('officer_login_345', 'officer_01', '2020-07-24', NULL),
	('officer_login_346', 'officer_01', '2020-07-24', NULL),
	('officer_login_347', 'officer_01', '2020-07-27', NULL),
	('officer_login_348', 'officer_01', '2020-07-27', '2020-07-27'),
	('officer_login_349', 'officer_01', '2020-07-28', NULL),
	('officer_login_35', 'officer_01', '2020-06-23', NULL),
	('officer_login_350', 'officer_01', '2020-07-28', NULL),
	('officer_login_351', 'officer_01', '2020-07-28', NULL),
	('officer_login_352', 'officer_01', '2020-07-28', NULL),
	('officer_login_353', 'officer_01', '2020-07-28', NULL),
	('officer_login_354', 'officer_01', '2020-07-28', NULL),
	('officer_login_355', 'officer_01', '2020-07-29', '2020-07-29'),
	('officer_login_356', 'officer_01', '2020-07-29', NULL),
	('officer_login_357', 'officer_01', '2020-07-29', NULL),
	('officer_login_358', 'officer_01', '2020-07-29', NULL),
	('officer_login_359', 'officer_01', '2020-08-03', '2020-08-03'),
	('officer_login_36', 'officer_01', '2020-06-23', NULL),
	('officer_login_360', 'officer_01', '2020-08-04', NULL),
	('officer_login_361', 'officer_01', '2020-08-11', NULL),
	('officer_login_362', 'officer_01', '2020-08-12', '2020-08-12'),
	('officer_login_37', 'officer_01', '2020-06-23', NULL),
	('officer_login_38', 'officer_01', '2020-06-23', NULL),
	('officer_login_39', 'officer_01', '2020-06-23', NULL),
	('officer_login_4', 'officer_01', '2020-06-22', NULL),
	('officer_login_40', 'officer_01', '2020-06-23', NULL),
	('officer_login_41', 'officer_01', '2020-06-23', NULL),
	('officer_login_42', 'officer_01', '2020-06-23', NULL),
	('officer_login_43', 'officer_01', '2020-06-23', NULL),
	('officer_login_44', 'officer_01', '2020-06-23', NULL),
	('officer_login_45', 'officer_01', '2020-06-23', NULL),
	('officer_login_46', 'officer_01', '2020-06-23', NULL),
	('officer_login_47', 'officer_01', '2020-06-23', NULL),
	('officer_login_48', 'officer_01', '2020-06-23', NULL),
	('officer_login_49', 'officer_01', '2020-06-24', NULL),
	('officer_login_5', 'officer_01', '2020-06-22', NULL),
	('officer_login_50', 'officer_01', '2020-06-24', NULL),
	('officer_login_51', 'officer_01', '2020-06-24', NULL),
	('officer_login_52', 'officer_01', '2020-06-24', NULL),
	('officer_login_53', 'officer_01', '2020-06-24', NULL),
	('officer_login_54', 'officer_01', '2020-06-24', NULL),
	('officer_login_55', 'officer_01', '2020-06-24', NULL),
	('officer_login_56', 'officer_01', '2020-06-24', NULL),
	('officer_login_57', 'officer_01', '2020-06-24', '2020-06-24'),
	('officer_login_58', 'officer_01', '2020-06-25', NULL),
	('officer_login_59', 'officer_01', '2020-06-25', NULL),
	('officer_login_6', 'officer_01', '2020-06-22', NULL),
	('officer_login_60', 'officer_01', '2020-06-25', '2020-06-25'),
	('officer_login_61', 'officer_01', '2020-06-25', '2020-06-25'),
	('officer_login_62', 'officer_01', '2020-06-25', NULL),
	('officer_login_63', 'officer_01', '2020-06-25', NULL),
	('officer_login_64', 'officer_01', '2020-06-25', NULL),
	('officer_login_65', 'officer_01', '2020-06-25', NULL),
	('officer_login_66', 'officer_01', '2020-06-25', '2020-06-25'),
	('officer_login_67', 'officer_01', '2020-06-25', '2020-06-25'),
	('officer_login_68', 'officer_01', '2020-06-25', NULL),
	('officer_login_69', 'officer_01', '2020-06-25', NULL),
	('officer_login_7', 'officer_01', '2020-06-22', NULL),
	('officer_login_70', 'officer_01', '2020-06-26', NULL),
	('officer_login_71', 'officer_01', '2020-06-26', NULL),
	('officer_login_72', 'officer_01', '2020-06-26', NULL),
	('officer_login_73', 'officer_01', '2020-06-26', NULL),
	('officer_login_74', 'officer_01', '2020-06-26', NULL),
	('officer_login_75', 'officer_01', '2020-06-26', NULL),
	('officer_login_76', 'officer_01', '2020-06-26', NULL),
	('officer_login_77', 'officer_01', '2020-06-26', NULL),
	('officer_login_78', 'officer_01', '2020-06-26', NULL),
	('officer_login_79', 'officer_01', '2020-06-26', '2020-06-26'),
	('officer_login_8', 'officer_01', '2020-06-22', NULL),
	('officer_login_80', 'officer_01', '2020-06-26', NULL),
	('officer_login_81', 'officer_01', '2020-06-26', NULL),
	('officer_login_82', 'officer_01', '2020-06-26', NULL),
	('officer_login_83', 'officer_01', '2020-06-26', NULL),
	('officer_login_84', 'officer_01', '2020-06-26', NULL),
	('officer_login_85', 'officer_01', '2020-06-26', NULL),
	('officer_login_86', 'officer_01', '2020-06-26', NULL),
	('officer_login_87', 'officer_01', '2020-06-26', NULL),
	('officer_login_88', 'officer_01', '2020-06-26', NULL),
	('officer_login_89', 'officer_01', '2020-06-26', NULL),
	('officer_login_9', 'officer_01', '2020-06-22', NULL),
	('officer_login_90', 'officer_01', '2020-06-26', '2020-06-26'),
	('officer_login_91', 'officer_01', '2020-06-26', '2020-06-26'),
	('officer_login_92', 'officer_01', '2020-06-26', NULL),
	('officer_login_93', 'officer_01', '2020-06-26', NULL),
	('officer_login_94', 'officer_01', '2020-06-26', NULL),
	('officer_login_95', 'officer_01', '2020-06-26', NULL),
	('officer_login_96', 'officer_01', '2020-06-26', NULL),
	('officer_login_97', 'officer_01', '2020-06-26', NULL),
	('officer_login_98', 'officer_01', '2020-06-26', NULL),
	('officer_login_99', 'officer_01', '2020-06-26', NULL);
/*!40000 ALTER TABLE `tb_officer_login` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_overdue 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_overdue` (
  `overdue_code` varchar(30) NOT NULL COMMENT '연체코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `rent_code` varchar(30) NOT NULL COMMENT '대여코드',
  `member_id` varchar(50) NOT NULL COMMENT '연체회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '연체도서코드',
  `overdue_start_date` date NOT NULL COMMENT '연체시작날짜',
  `overdue_date` int(11) NOT NULL COMMENT '연체일수',
  `overdue_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`overdue_code`),
  KEY `FK_tb_officer_TO_tb_overdue` (`officer_id`),
  KEY `FK_tb_library_TO_tb_overdue` (`library_code`),
  KEY `FK_tb_rent_TO_tb_overdue` (`rent_code`),
  KEY `FK_tb_member_TO_tb_overdue` (`member_id`),
  KEY `FK_tb_book_TO_tb_overdue` (`book_code`),
  CONSTRAINT `FK_tb_book_TO_tb_overdue` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_overdue` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_overdue` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_overdue` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_rent_TO_tb_overdue` FOREIGN KEY (`rent_code`) REFERENCES `tb_rent` (`rent_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='연체 테이블';

-- 테이블 데이터 glemfk1214.tb_overdue:~1 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_overdue` DISABLE KEYS */;
INSERT INTO `tb_overdue` (`overdue_code`, `library_code`, `rent_code`, `member_id`, `book_code`, `overdue_start_date`, `overdue_date`, `overdue_reg_date`, `officer_id`) VALUES
	('overdue_0001', 'library_01', 'rent_0001', 'member_002', 'bk_0001', '2020-07-19', 5, '2020-07-24', 'officer_01');
/*!40000 ALTER TABLE `tb_overdue` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_point_history 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_point_history` (
  `point_history_code` varchar(30) NOT NULL COMMENT '상벌점내역코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '회원아이디',
  `point_standard_code` varchar(30) NOT NULL COMMENT '상벌점기준코드',
  `point_history_reg_date` date NOT NULL COMMENT '등록날짜',
  `point_history_condition` enum('대기','승인') NOT NULL DEFAULT '대기' COMMENT '상벌점 상태',
  `officer_id` varchar(50) DEFAULT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`point_history_code`),
  KEY `FK_tb_member_TO_tb_point_history` (`member_id`),
  KEY `FK_tb_library_TO_tb_point_history` (`library_code`),
  KEY `FK_tb_point_standard3_TO_tb_point_history` (`point_standard_code`),
  KEY `FK_tb_point_history_tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_library_TO_tb_point_history` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_point_history` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_point_history_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_point_standard3_TO_tb_point_history` FOREIGN KEY (`point_standard_code`) REFERENCES `tb_point_standard` (`point_standard_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='상벌점내역 테이블';

-- 테이블 데이터 glemfk1214.tb_point_history:~4 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_point_history` DISABLE KEYS */;
INSERT INTO `tb_point_history` (`point_history_code`, `library_code`, `member_id`, `point_standard_code`, `point_history_reg_date`, `point_history_condition`, `officer_id`) VALUES
	('point_history_00001', 'library_01', 'member_001', 'point_standard_006', '2020-07-21', '대기', NULL),
	('point_history_00002', 'library_01', 'id001', 'point_standard_006', '2020-07-21', '대기', NULL),
	('point_history_00003', 'library_01', 'member_001', 'point_standard_006', '2020-07-27', '승인', 'officer_01'),
	('point_history_00004', 'library_01', 'member_001', 'point_standard_006', '2020-07-28', '대기', NULL);
/*!40000 ALTER TABLE `tb_point_history` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_point_standard 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_point_standard` (
  `point_standard_code` varchar(30) NOT NULL COMMENT '상벌점기준코드',
  `point_standard_division` varchar(30) NOT NULL COMMENT '상벌점기준분류',
  `point_standard_name` varchar(50) NOT NULL COMMENT '상벌점기준이름',
  `point_standard_score` int(11) NOT NULL COMMENT '상벌점점수',
  `point_standard_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`point_standard_code`),
  KEY `FK_tb_officer_TO_tb_point_standard3` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_point_standard3` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='상벌점기준 테이블';

-- 테이블 데이터 glemfk1214.tb_point_standard:~6 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_point_standard` DISABLE KEYS */;
INSERT INTO `tb_point_standard` (`point_standard_code`, `point_standard_division`, `point_standard_name`, `point_standard_score`, `point_standard_reg_date`, `officer_id`) VALUES
	('point_standard_001', '상점', '정상 반납', 1, '2020-06-05', 'officer_01'),
	('point_standard_002', '상점', '도서평작성(5개)', 1, '2020-06-05', 'officer_01'),
	('point_standard_003', '벌점', '연체(1일)', -1, '2020-06-05', 'officer_01'),
	('point_standard_004', '벌점', '분실', -10, '2020-06-05', 'officer_01'),
	('point_standard_005', '벌점', '도서평신고(10개)', -10, '2020-06-05', 'officer_01'),
	('point_standard_006', '벌점', '예약취소', -1, '2020-07-21', 'officer_01');
/*!40000 ALTER TABLE `tb_point_standard` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_publisher 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_publisher` (
  `publisher_code` varchar(30) NOT NULL COMMENT '출판사코드',
  `publisher_name` varchar(50) NOT NULL COMMENT '출판사이름',
  `publisher_page` varchar(50) DEFAULT NULL COMMENT '출판사홈페이지',
  `publisher_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`publisher_code`),
  KEY `FK_tb_officer_TO_tb_publisher` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_publisher` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='출판사 테이블';

-- 테이블 데이터 glemfk1214.tb_publisher:~111 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_publisher` DISABLE KEYS */;
INSERT INTO `tb_publisher` (`publisher_code`, `publisher_name`, `publisher_page`, `publisher_reg_date`, `officer_id`) VALUES
	('publisher_001', '21세기북스((주)북이십일)', 'http://www.book21.co.kr', '2020-06-15', 'officer_01'),
	('publisher_002', '간디서원(크레파스)', '', '2020-06-15', 'officer_01'),
	('publisher_003', '갈무리', 'http://www.galmuri.co.kr', '2020-06-15', 'officer_01'),
	('publisher_004', '개마고원', 'http://www.kaema.co.kr', '2020-06-15', 'officer_01'),
	('publisher_005', '공간사', 'http://blog.daum.net/vmspace', '2020-06-15', 'officer_01'),
	('publisher_006', '그린비', '', '2020-06-15', 'officer_01'),
	('publisher_007', '김영사', 'http://www.gimmyoung.com', '2020-06-15', 'officer_01'),
	('publisher_008', '까치글방', 'http://www.kachibooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_009', '나노미디어', 'http://nanomedia.co.kr', '2020-06-15', 'officer_01'),
	('publisher_010', '눈빛', '', '2020-06-15', 'officer_01'),
	('publisher_011', '도솔', 'http://www.dosolbooks.com', '2020-06-15', 'officer_01'),
	('publisher_012', '동녘', 'http://www.dongnyok.com', '2020-06-15', 'officer_01'),
	('publisher_013', '들녘(코기토)', 'http://www.ddd21.co.kr', '2020-06-15', 'officer_01'),
	('publisher_014', '럭스미디어(럭스키즈)', 'http://www.luxmedia.co.kr http://cafe.naver.com/lu', '2020-06-15', 'officer_01'),
	('publisher_015', '리북', '', '2020-06-15', 'officer_01'),
	('publisher_016', '문학과지성사', 'http://www.moonji.com', '2020-06-15', 'officer_01'),
	('publisher_017', '문학세계사', 'http://www.msp21.co.kr', '2020-06-15', 'officer_01'),
	('publisher_018', '물병자리', 'http://www.mbage.com', '2020-06-15', 'officer_01'),
	('publisher_019', '미진사', 'http://www.mijinsa.com', '2020-06-15', 'officer_01'),
	('publisher_020', '민속원', 'http://www.minsokwon.com', '2020-06-15', 'officer_01'),
	('publisher_021', '민음사', 'http://www.minumsa.com', '2020-06-15', 'officer_01'),
	('publisher_022', '박영사', '', '2020-06-15', 'officer_01'),
	('publisher_023', '범우사', 'http://www.bumwoosa.co.kr', '2020-06-15', 'officer_01'),
	('publisher_024', '보리', 'http://www.boribook.com', '2020-06-15', 'officer_01'),
	('publisher_025', '부키', 'http://www.bookie.co.kr', '2020-06-15', 'officer_01'),
	('publisher_026', '북코리아(선학사)', 'http://www.ibookorea.com', '2020-06-15', 'officer_01'),
	('publisher_027', '북하우스', 'http://www.bookhouse.co.kr', '2020-06-15', 'officer_01'),
	('publisher_028', '뿌리와이파리', 'http://puripari.net', '2020-06-15', 'officer_01'),
	('publisher_029', '사계절', 'http://www.sakyejul.co.kr', '2020-06-15', 'officer_01'),
	('publisher_030', '사이언스북스', 'http://sciencebooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_031', '살림', 'http://www.sallimbooks.com', '2020-06-15', 'officer_01'),
	('publisher_032', '삶과꿈', 'http://www.lifeanddream.co.kr', '2020-06-15', 'officer_01'),
	('publisher_033', '삼인', 'http://www.saminbooks.com', '2020-06-15', 'officer_01'),
	('publisher_034', '새물결', '', '2020-06-15', 'officer_01'),
	('publisher_035', '생각의나무', 'http://www.itreebook.com', '2020-06-15', 'officer_01'),
	('publisher_036', '서광사', '', '2020-06-15', 'officer_01'),
	('publisher_037', '서교출판사', 'http://www.skbook.net', '2020-06-15', 'officer_01'),
	('publisher_038', '서울문화사', 'http://www.ismg.co.kr', '2020-06-15', 'officer_01'),
	('publisher_039', '서해문집', 'http://www.booksea.co.kr', '2020-06-15', 'officer_01'),
	('publisher_040', '성안당(사이버, 황금부엉이)', 'http://www.cyber.co.kr', '2020-06-15', 'officer_01'),
	('publisher_041', '세종서적', 'http://www.sejongbooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_042', '소나무', '', '2020-06-15', 'officer_01'),
	('publisher_043', '소명출판', 'http://www.somyong.co.kr', '2020-06-15', 'officer_01'),
	('publisher_044', '수선재', 'http://www.soosunjaebooks.com', '2020-06-15', 'officer_01'),
	('publisher_045', '시공사', 'http://www.sigongsa.com', '2020-06-15', 'officer_01'),
	('publisher_046', '아름드리미디어', 'http://arumdri.co.kr', '2020-06-15', 'officer_01'),
	('publisher_047', '아침이슬', '', '2020-06-15', 'officer_01'),
	('publisher_048', '아카넷', 'http://www.acanet.co.kr', '2020-06-15', 'officer_01'),
	('publisher_049', '안그라픽스', 'http://www.agbook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_050', '양무', '', '2020-06-15', 'officer_01'),
	('publisher_051', '양철북', 'http://cafe.daum.net/tindrum', '2020-06-15', 'officer_01'),
	('publisher_052', '에코의서재', '', '2020-06-15', 'officer_01'),
	('publisher_053', '역사비평사', 'http://www.yukbi.com', '2020-06-15', 'officer_01'),
	('publisher_054', '열린책들', 'http://www.openbooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_055', '열화당', 'http://www.youlhwadang.co.kr', '2020-06-15', 'officer_01'),
	('publisher_056', '예경', 'http://www.yekyong.com', '2020-06-15', 'officer_01'),
	('publisher_057', '예담', 'http://www.yedamco.co.kr', '2020-06-15', 'officer_01'),
	('publisher_058', '울력', '', '2020-06-15', 'officer_01'),
	('publisher_059', '웅진지식하우스', 'http://jisikhouse.wjbooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_060', '이가서', 'http://www.leegaseo.com', '2020-06-15', 'officer_01'),
	('publisher_061', '이론과실천', 'http://blog.naver.com/eshil2', '2020-06-15', 'officer_01'),
	('publisher_062', '이매진', '', '2020-06-15', 'officer_01'),
	('publisher_063', '이산', 'http://www.yeesan.co.kr', '2020-06-15', 'officer_01'),
	('publisher_064', '이손', '', '2020-06-15', 'officer_01'),
	('publisher_065', '이제이북스', '', '2020-06-15', 'officer_01'),
	('publisher_066', '이치', '', '2020-06-15', 'officer_01'),
	('publisher_067', '인간사랑', '', '2020-06-15', 'officer_01'),
	('publisher_068', '일송북', '', '2020-06-15', 'officer_01'),
	('publisher_069', '전파과학사', 'http://www.s-wave.co.kr', '2020-06-15', 'officer_01'),
	('publisher_070', '책과함께', 'http://blog.naver.com/prpub', '2020-06-15', 'officer_01'),
	('publisher_071', '책세상', 'http://www.bkworld.co.kr', '2020-06-15', 'officer_01'),
	('publisher_072', '청계(휴먼필드)', '', '2020-06-15', 'officer_01'),
	('publisher_073', '청문각', 'http://www.cmgbook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_074', '청어람', 'http://cafe.naver.com/chungarammedia', '2020-06-15', 'officer_01'),
	('publisher_075', '태학사', 'http://thaehaksa.com', '2020-06-15', 'officer_01'),
	('publisher_076', '통나무', '', '2020-06-15', 'officer_01'),
	('publisher_077', '포토스페이스(타임스페이스)', 'http://www.fotato.com/webzine/bookmart/bookmart.as', '2020-06-15', 'officer_01'),
	('publisher_078', '푸른솔', '', '2020-06-15', 'officer_01'),
	('publisher_079', '푸른숲', 'http://www.prunsoop.co.kr', '2020-06-15', 'officer_01'),
	('publisher_080', '푸른역사', 'http://www.bluehistory.co.kr', '2020-06-15', 'officer_01'),
	('publisher_081', '필맥출판사', 'http://philmac.co.kr', '2020-06-15', 'officer_01'),
	('publisher_082', '하늘연못', '', '2020-06-15', 'officer_01'),
	('publisher_083', '하늘재', '', '2020-06-15', 'officer_01'),
	('publisher_084', '학고재', '', '2020-06-15', 'officer_01'),
	('publisher_085', '학연문화사', 'http://www.hakyoun.co.kr', '2020-06-15', 'officer_01'),
	('publisher_086', '학지사', 'http://www.hakjisa.co.kr', '2020-06-15', 'officer_01'),
	('publisher_087', '한겨레출판', 'http://www.hanibook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_088', '한길사', 'http://www.hangilsa.co.kr', '2020-06-15', 'officer_01'),
	('publisher_089', '한빛미디어', 'http://www.hanbitbook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_090', '한울', 'http://www.hanulbooks.co.kr', '2020-06-15', 'officer_01'),
	('publisher_091', '해냄출판사', 'http://www.hainaim.com', '2020-06-15', 'officer_01'),
	('publisher_092', '행복한책읽기', 'http://happysf.net', '2020-06-15', 'officer_01'),
	('publisher_093', '현실문화연구(현문서가)', '', '2020-06-15', 'officer_01'),
	('publisher_094', '홍익출판사', 'http://www.hongikbooks.com', '2020-06-15', 'officer_01'),
	('publisher_095', '황금가지', 'http://www.goldenbough.co.kr', '2020-06-15', 'officer_01'),
	('publisher_096', '황소자리', '', '2020-06-15', 'officer_01'),
	('publisher_097', '후마니타스', 'http://www.humanitasbook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_098', '규장문화사', 'http://www.kyujang.co.kr', '2020-06-15', 'officer_01'),
	('publisher_099', '경영베스트', 'http://www.mbabook.co.kr', '2020-06-15', 'officer_01'),
	('publisher_100', '국학자료원', 'http://www.kookhak.co.kr', '2020-06-15', 'officer_01'),
	('publisher_101', '현대문학', NULL, '2020-07-06', 'officer_01'),
	('publisher_102', '놀(다산북스)', NULL, '2020-07-06', 'officer_01'),
	('publisher_103', '문학동네', NULL, '2020-07-06', 'officer_01'),
	('publisher_104', '비전비엔피', NULL, '2020-07-06', 'officer_01'),
	('publisher_105', '위즈덤하우스', NULL, '2020-07-06', 'officer_01'),
	('publisher_106', '수오서재', NULL, '2020-07-06', 'officer_01'),
	('publisher_107', '문학사상사', NULL, '2020-07-06', 'officer_01'),
	('publisher_108', '창비', NULL, '2020-07-22', 'officer_03'),
	('publisher_109', 'Book plaza(북플라자)', NULL, '2020-07-22', 'officer_03'),
	('publisher_110', '어바웃어북', NULL, '2020-07-23', 'officer_01'),
	('publisher_111', '특별한서재', NULL, '2020-07-23', 'officer_01');
/*!40000 ALTER TABLE `tb_publisher` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_recommend 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_recommend` (
  `recommend_code` varchar(30) NOT NULL COMMENT '추천코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `book_code` varchar(30) NOT NULL COMMENT '추천도서',
  `recommend_name` varchar(30) NOT NULL COMMENT '추천목록이름',
  `recommend_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`recommend_code`),
  KEY `FK_tb_officer_TO_tb_recommend` (`officer_id`),
  KEY `FK_tb_library_TO_tb_recommend` (`library_code`),
  KEY `FK_tb_book_TO_tb_recommend` (`book_code`),
  CONSTRAINT `FK_tb_book_TO_tb_recommend` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_recommend` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_officer_TO_tb_recommend` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서추천 테이블';

-- 테이블 데이터 glemfk1214.tb_recommend:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_recommend` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_recommend` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_region 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_region` (
  `region_code` varchar(30) NOT NULL COMMENT '지역코드',
  `region_major` varchar(50) NOT NULL COMMENT '지역대분류',
  `region_minor` varchar(50) NOT NULL COMMENT '지역소분류',
  `region_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`region_code`),
  KEY `FK_tb_region_tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_region_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='지역 테이블';

-- 테이블 데이터 glemfk1214.tb_region:~207 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_region` DISABLE KEYS */;
INSERT INTO `tb_region` (`region_code`, `region_major`, `region_minor`, `region_reg_date`, `officer_id`) VALUES
	('region_001', '강원도', '태백시', '2020-05-30', 'officer_01'),
	('region_002', '강원도', '강릉시', '2020-05-30', 'officer_01'),
	('region_003', '강원도', '횡성군', '2020-05-30', 'officer_01'),
	('region_004', '강원도', '동해시', '2020-05-30', 'officer_01'),
	('region_005', '강원도', '속초시', '2020-05-30', 'officer_01'),
	('region_006', '강원도', '인제군', '2020-05-30', 'officer_01'),
	('region_007', '강원도', '원주시', '2020-05-30', 'officer_01'),
	('region_008', '강원도', '삼척시', '2020-05-30', 'officer_01'),
	('region_009', '강원도', '철원군', '2020-05-30', 'officer_01'),
	('region_010', '강원도', '양양군', '2020-05-30', 'officer_01'),
	('region_011', '강원도', '양구군', '2020-05-30', 'officer_01'),
	('region_012', '강원도', '평창군', '2020-05-30', 'officer_01'),
	('region_013', '강원도', '춘천시', '2020-05-30', 'officer_01'),
	('region_014', '강원도', '홍천군', '2020-05-30', 'officer_01'),
	('region_015', '강원도', '정선군', '2020-05-30', 'officer_01'),
	('region_016', '경기도', '김포시', '2020-05-30', 'officer_01'),
	('region_017', '경기도', '양평군', '2020-05-30', 'officer_01'),
	('region_018', '경기도', '시흥시', '2020-05-30', 'officer_01'),
	('region_019', '경기도', '광명시', '2020-05-30', 'officer_01'),
	('region_020', '경기도', '안산시', '2020-05-30', 'officer_01'),
	('region_021', '경기도', '여주시', '2020-05-30', 'officer_01'),
	('region_022', '경기도', '단원구', '2020-05-30', 'officer_01'),
	('region_023', '경기도', '포천시', '2020-05-30', 'officer_01'),
	('region_024', '경기도', '오산시', '2020-05-30', 'officer_01'),
	('region_025', '경기도', '안양시', '2020-05-30', 'officer_01'),
	('region_026', '경기도', '부천시', '2020-05-30', 'officer_01'),
	('region_027', '경기도', '구리시', '2020-05-30', 'officer_01'),
	('region_028', '경기도', '이천시', '2020-05-30', 'officer_01'),
	('region_029', '경기도', '파주시', '2020-05-30', 'officer_01'),
	('region_030', '경기도', '성남시', '2020-05-30', 'officer_01'),
	('region_031', '경기도', '동두천시', '2020-05-30', 'officer_01'),
	('region_032', '경기도', '안성시', '2020-05-30', 'officer_01'),
	('region_033', '경기도', '하남시', '2020-05-30', 'officer_01'),
	('region_034', '경기도', '군포시', '2020-05-30', 'officer_01'),
	('region_035', '경기도', '수원시', '2020-05-30', 'officer_01'),
	('region_036', '경기도', '가평군', '2020-05-30', 'officer_01'),
	('region_037', '경기도', '용인시', '2020-05-30', 'officer_01'),
	('region_038', '경기도', '고양시', '2020-05-30', 'officer_01'),
	('region_039', '경기도', '평택시', '2020-05-30', 'officer_01'),
	('region_040', '경기도', '양주시', '2020-05-30', 'officer_01'),
	('region_041', '경기도', '광주시', '2020-05-30', 'officer_01'),
	('region_042', '경기도', '화성시', '2020-05-30', 'officer_01'),
	('region_043', '경기도', '의왕시', '2020-05-30', 'officer_01'),
	('region_044', '경기도', '의정부시', '2020-05-30', 'officer_01'),
	('region_045', '경기도', '과천시', '2020-05-30', 'officer_01'),
	('region_046', '경기도', '남양주시', '2020-05-30', 'officer_01'),
	('region_047', '경상남도', '거제시', '2020-05-30', 'officer_01'),
	('region_048', '경상남도', '거창군', '2020-05-30', 'officer_01'),
	('region_049', '경상남도', '고성군', '2020-05-30', 'officer_01'),
	('region_050', '경상남도', '김해시', '2020-05-30', 'officer_01'),
	('region_051', '경상남도', '남해군', '2020-05-30', 'officer_01'),
	('region_052', '경상남도', '밀양시', '2020-05-30', 'officer_01'),
	('region_053', '경상남도', '사천시', '2020-05-30', 'officer_01'),
	('region_054', '경상남도', '양산시', '2020-05-30', 'officer_01'),
	('region_055', '경상남도', '의령군', '2020-05-30', 'officer_01'),
	('region_056', '경상남도', '진주시', '2020-05-30', 'officer_01'),
	('region_057', '경상남도', '창녕군', '2020-05-30', 'officer_01'),
	('region_058', '경상남도', '창원시', '2020-05-30', 'officer_01'),
	('region_059', '경상남도', '창원시', '2020-05-30', 'officer_01'),
	('region_060', '경상남도', '통영시', '2020-05-30', 'officer_01'),
	('region_061', '경상남도', '함안군', '2020-05-30', 'officer_01'),
	('region_062', '경상남도', '함양군', '2020-05-30', 'officer_01'),
	('region_063', '경상북도', '경산시', '2020-05-30', 'officer_01'),
	('region_064', '경상북도', '경주시', '2020-05-30', 'officer_01'),
	('region_065', '경상북도', '고령군', '2020-05-30', 'officer_01'),
	('region_066', '경상북도', '구미시', '2020-05-30', 'officer_01'),
	('region_067', '경상북도', '김천시', '2020-05-30', 'officer_01'),
	('region_068', '경상북도', '문경시', '2020-05-30', 'officer_01'),
	('region_069', '경상북도', '봉화군', '2020-05-30', 'officer_01'),
	('region_070', '경상북도', '성주군', '2020-05-30', 'officer_01'),
	('region_071', '경상북도', '안동시', '2020-05-30', 'officer_01'),
	('region_072', '경상북도', '영덕군', '2020-05-30', 'officer_01'),
	('region_073', '경상북도', '영양군', '2020-05-30', 'officer_01'),
	('region_074', '경상북도', '영천시', '2020-05-30', 'officer_01'),
	('region_075', '경상북도', '예천군', '2020-05-30', 'officer_01'),
	('region_076', '경상북도', '울진군', '2020-05-30', 'officer_01'),
	('region_077', '경상북도', '의성군', '2020-05-30', 'officer_01'),
	('region_078', '경상북도', '청송군', '2020-05-30', 'officer_01'),
	('region_079', '경상북도', '칠곡군', '2020-05-30', 'officer_01'),
	('region_080', '경상북도', '포항시', '2020-05-30', 'officer_01'),
	('region_081', '광주광역시', '광산구', '2020-05-30', 'officer_01'),
	('region_082', '광주광역시', '남구', '2020-05-30', 'officer_01'),
	('region_083', '광주광역시', '동구', '2020-05-30', 'officer_01'),
	('region_084', '광주광역시', '북구', '2020-05-30', 'officer_01'),
	('region_085', '광주광역시', '서구', '2020-05-30', 'officer_01'),
	('region_086', '대구광역시', '중구', '2020-05-30', 'officer_01'),
	('region_087', '대구광역시', '수성구', '2020-05-30', 'officer_01'),
	('region_088', '대구광역시', '서구', '2020-05-30', 'officer_01'),
	('region_089', '대구광역시', '북구', '2020-05-30', 'officer_01'),
	('region_090', '대구광역시', '동구', '2020-05-30', 'officer_01'),
	('region_091', '대구광역시', '달성군', '2020-05-30', 'officer_01'),
	('region_092', '대구광역시', '달서구', '2020-05-30', 'officer_01'),
	('region_093', '대구광역시', '남구', '2020-05-30', 'officer_01'),
	('region_094', '대전광역시', '대덕구', '2020-05-30', 'officer_01'),
	('region_095', '대전광역시', '동구', '2020-05-30', 'officer_01'),
	('region_096', '대전광역시', '서구', '2020-05-30', 'officer_01'),
	('region_097', '대전광역시', '유성구', '2020-05-30', 'officer_01'),
	('region_098', '부산광역시', '강서구', '2020-05-30', 'officer_01'),
	('region_099', '부산광역시', '금정구', '2020-05-30', 'officer_01'),
	('region_100', '부산광역시', '기장군', '2020-05-30', 'officer_01'),
	('region_101', '부산광역시', '남구', '2020-05-30', 'officer_01'),
	('region_102', '부산광역시', '동구', '2020-05-30', 'officer_01'),
	('region_103', '부산광역시', '동래구', '2020-05-30', 'officer_01'),
	('region_104', '부산광역시', '부산진구', '2020-05-30', 'officer_01'),
	('region_105', '부산광역시', '북구', '2020-05-30', 'officer_01'),
	('region_106', '부산광역시', '사상구', '2020-05-30', 'officer_01'),
	('region_107', '부산광역시', '사하구', '2020-05-30', 'officer_01'),
	('region_108', '부산광역시', '수영구', '2020-05-30', 'officer_01'),
	('region_109', '부산광역시', '연제구', '2020-05-30', 'officer_01'),
	('region_110', '부산광역시', '영도구', '2020-05-30', 'officer_01'),
	('region_111', '부산광역시', '해운대구', '2020-05-30', 'officer_01'),
	('region_112', '서울특별시', '강남구', '2020-05-30', 'officer_01'),
	('region_113', '서울특별시', '강동구', '2020-05-30', 'officer_01'),
	('region_114', '서울특별시', '강북구', '2020-05-30', 'officer_01'),
	('region_115', '서울특별시', '강서구', '2020-05-30', 'officer_01'),
	('region_116', '서울특별시', '관악구', '2020-05-30', 'officer_01'),
	('region_117', '서울특별시', '광진구', '2020-05-30', 'officer_01'),
	('region_118', '서울특별시', '구로구', '2020-05-30', 'officer_01'),
	('region_119', '서울특별시', '금천구', '2020-05-30', 'officer_01'),
	('region_120', '서울특별시', '노원구　', '2020-05-30', 'officer_01'),
	('region_121', '서울특별시', '동작구', '2020-05-30', 'officer_01'),
	('region_122', '서울특별시', '마포구', '2020-05-30', 'officer_01'),
	('region_123', '서울특별시', '서대문구', '2020-05-30', 'officer_01'),
	('region_124', '서울특별시', '서초구', '2020-05-30', 'officer_01'),
	('region_125', '서울특별시', '성동구', '2020-05-30', 'officer_01'),
	('region_126', '서울특별시', '성동구', '2020-05-30', 'officer_01'),
	('region_127', '서울특별시', '성북구', '2020-05-30', 'officer_01'),
	('region_128', '서울특별시', '송파구', '2020-05-30', 'officer_01'),
	('region_129', '서울특별시', '양천구', '2020-05-30', 'officer_01'),
	('region_130', '서울특별시', '영등포구', '2020-05-30', 'officer_01'),
	('region_131', '서울특별시', '용산구', '2020-05-30', 'officer_01'),
	('region_132', '서울특별시', '은평구', '2020-05-30', 'officer_01'),
	('region_133', '서울특별시', '종로구', '2020-05-30', 'officer_01'),
	('region_134', '서울특별시', '중랑구', '2020-05-30', 'officer_01'),
	('region_135', '세종특별자치시', '세종특별자치시', '2020-05-30', 'officer_01'),
	('region_136', '울산광역시', '남구', '2020-05-30', 'officer_01'),
	('region_137', '울산광역시', '동구', '2020-05-30', 'officer_01'),
	('region_138', '울산광역시', '북구', '2020-05-30', 'officer_01'),
	('region_139', '울산광역시', '울주군', '2020-05-30', 'officer_01'),
	('region_140', '울산광역시', '중구', '2020-05-30', 'officer_01'),
	('region_141', '인천광역시', '강화군', '2020-05-30', 'officer_01'),
	('region_142', '인천광역시', '계양구', '2020-05-30', 'officer_01'),
	('region_143', '인천광역시', '남동구', '2020-05-30', 'officer_01'),
	('region_144', '인천광역시', '동구', '2020-05-30', 'officer_01'),
	('region_145', '인천광역시', '미추홀구', '2020-05-30', 'officer_01'),
	('region_146', '인천광역시', '부평구', '2020-05-30', 'officer_01'),
	('region_147', '인천광역시', '서구', '2020-05-30', 'officer_01'),
	('region_148', '인천광역시', '연수구', '2020-05-30', 'officer_01'),
	('region_149', '인천광역시', '옹진군', '2020-05-30', 'officer_01'),
	('region_150', '인천광역시', '중구', '2020-05-30', 'officer_01'),
	('region_151', '전라남도', '강진군', '2020-05-30', 'officer_01'),
	('region_152', '전라남도', '고흥군', '2020-05-30', 'officer_01'),
	('region_153', '전라남도', '구례군', '2020-05-30', 'officer_01'),
	('region_154', '전라남도', '담양군', '2020-05-30', 'officer_01'),
	('region_155', '전라남도', '목포시', '2020-05-30', 'officer_01'),
	('region_156', '전라남도', '무안군', '2020-05-30', 'officer_01'),
	('region_157', '전라남도', '보성군', '2020-05-30', 'officer_01'),
	('region_158', '전라남도', '순천시', '2020-05-30', 'officer_01'),
	('region_159', '전라남도', '신안군', '2020-05-30', 'officer_01'),
	('region_160', '전라남도', '여수시', '2020-05-30', 'officer_01'),
	('region_161', '전라남도', '영광군', '2020-05-30', 'officer_01'),
	('region_162', '전라남도', '영암군', '2020-05-30', 'officer_01'),
	('region_163', '전라남도', '완도군', '2020-05-30', 'officer_01'),
	('region_164', '전라남도', '장흥군', '2020-05-30', 'officer_01'),
	('region_165', '전라남도', '전라남도', '2020-05-30', 'officer_01'),
	('region_166', '전라남도', '진도군', '2020-05-30', 'officer_01'),
	('region_167', '전라남도', '함평군', '2020-05-30', 'officer_01'),
	('region_168', '전라남도', '해남군', '2020-05-30', 'officer_01'),
	('region_169', '전라남도', '화순군', '2020-05-30', 'officer_01'),
	('region_170', '전라북도', '고창군', '2020-05-30', 'officer_01'),
	('region_171', '전라북도', '군산시', '2020-05-30', 'officer_01'),
	('region_172', '전라북도', '김제시', '2020-05-30', 'officer_01'),
	('region_173', '전라북도', '남원시', '2020-05-30', 'officer_01'),
	('region_174', '전라북도', '무주군', '2020-05-30', 'officer_01'),
	('region_175', '전라북도', '부안군', '2020-05-30', 'officer_01'),
	('region_176', '전라북도', '순창군', '2020-05-30', 'officer_01'),
	('region_177', '전라북도', '완주군', '2020-05-30', 'officer_01'),
	('region_178', '전라북도', '익산시', '2020-05-30', 'officer_01'),
	('region_179', '전라북도', '임실군', '2020-05-30', 'officer_01'),
	('region_180', '전라북도', '장수군', '2020-05-30', 'officer_01'),
	('region_181', '전라북도', '전주시', '2020-05-30', 'officer_01'),
	('region_182', '전라북도', '정읍시', '2020-05-30', 'officer_01'),
	('region_183', '전라북도', '진안군', '2020-05-30', 'officer_01'),
	('region_184', '제주특별자치도', '서귀포시', '2020-05-30', 'officer_01'),
	('region_185', '제주특별자치도', '제주시', '2020-05-30', 'officer_01'),
	('region_186', '충청남도', '공주시', '2020-05-30', 'officer_01'),
	('region_187', '충청남도', '금산군', '2020-05-30', 'officer_01'),
	('region_188', '충청남도', '논산시', '2020-05-30', 'officer_01'),
	('region_189', '충청남도', '보령시', '2020-05-30', 'officer_01'),
	('region_190', '충청남도', '서산시', '2020-05-30', 'officer_01'),
	('region_191', '충청남도', '서천군', '2020-05-30', 'officer_01'),
	('region_192', '충청남도', '아산시', '2020-05-30', 'officer_01'),
	('region_193', '충청남도', '예산군', '2020-05-30', 'officer_01'),
	('region_194', '충청남도', '천안시', '2020-05-30', 'officer_01'),
	('region_195', '충청남도', '청양군', '2020-05-30', 'officer_01'),
	('region_196', '충청남도', '홍성군', '2020-05-30', 'officer_01'),
	('region_197', '충청북도', '괴산군', '2020-05-30', 'officer_01'),
	('region_198', '충청북도', '단양군', '2020-05-30', 'officer_01'),
	('region_199', '충청북도', '영동군', '2020-05-30', 'officer_01'),
	('region_200', '충청북도', '옥천군', '2020-05-30', 'officer_01'),
	('region_201', '충청북도', '음성군', '2020-05-30', 'officer_01'),
	('region_202', '충청북도', '제천시', '2020-05-30', 'officer_01'),
	('region_203', '충청북도', '증평군', '2020-05-30', 'officer_01'),
	('region_204', '충청북도', '진천군', '2020-05-30', 'officer_01'),
	('region_205', '충청북도', '청주시', '2020-05-30', 'officer_01'),
	('region_206', '충청북도', '충주시', '2020-05-30', 'officer_01'),
	('region_207', '강원도', '스타버교ㅡ', '2020-06-26', 'officer_01');
/*!40000 ALTER TABLE `tb_region` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_rent 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_rent` (
  `rent_code` varchar(30) NOT NULL COMMENT '대여코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '대여회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '대여도서코드',
  `rent_date` varchar(50) NOT NULL COMMENT '대여날짜',
  `rent_return_date` date NOT NULL COMMENT '반납날짜',
  `rent_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`rent_code`),
  KEY `FK_tb_officer_TO_tb_rent` (`officer_id`),
  KEY `FK_tb_library_TO_tb_rent` (`library_code`),
  KEY `FK_tb_member_TO_tb_rent` (`member_id`),
  KEY `FK_tb_book_TO_tb_rent` (`book_code`),
  CONSTRAINT `FK_tb_book_TO_tb_rent` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_rent` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_rent` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_rent` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='대여 테이블';

-- 테이블 데이터 glemfk1214.tb_rent:~6 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_rent` DISABLE KEYS */;
INSERT INTO `tb_rent` (`rent_code`, `library_code`, `member_id`, `book_code`, `rent_date`, `rent_return_date`, `rent_reg_date`, `officer_id`) VALUES
	('rent_0001', 'library_01', 'member_002', 'bk_0005', '2020-05-13', '2020-06-25', '2020-05-13', 'officer_02'),
	('rent_0002', 'library_002', 'member_003', 'bk_0006', '2020-07-02', '2020-07-09', '2020-07-02', 'officer_06'),
	('rent_0003', 'library_01', 'member_001', 'bk_0002', '2020-05-20', '2020-05-27', '2020-06-22', 'officer_03'),
	('rent_0004', 'library_01', 'member_002', 'bk_0004', '2020-06-10', '2020-07-04', '2020-06-23', 'officer_04'),
	('rent_0005', 'library_003', 'id005', 'bk_0007', '2020-07-02', '2020-07-09', '2020-07-02', 'officer_06'),
	('rent_0006', 'library_01', 'member_001', 'bk_0014', '2020-07-06', '2020-07-20', '2020-07-06', 'officer_03');
/*!40000 ALTER TABLE `tb_rent` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_return 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_return` (
  `return_code` varchar(30) NOT NULL COMMENT '반납코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '반납회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '반납도서코드',
  `rent_code` varchar(30) NOT NULL COMMENT '대여코드',
  `return_date` date NOT NULL COMMENT '반납날짜',
  `return_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`return_code`),
  KEY `FK_tb_officer_TO_tb_return` (`officer_id`),
  KEY `FK_tb_library_TO_tb_return` (`library_code`),
  KEY `FK_tb_member_TO_tb_return` (`member_id`),
  KEY `FK_tb_book_TO_tb_return` (`book_code`),
  KEY `FK_tb_rent_TO_tb_return` (`rent_code`),
  CONSTRAINT `FK_tb_book_TO_tb_return` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_return` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_return` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_return` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_rent_TO_tb_return` FOREIGN KEY (`rent_code`) REFERENCES `tb_rent` (`rent_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='반납 테이블';

-- 테이블 데이터 glemfk1214.tb_return:~14 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_return` DISABLE KEYS */;
INSERT INTO `tb_return` (`return_code`, `library_code`, `member_id`, `book_code`, `rent_code`, `return_date`, `return_reg_date`, `officer_id`) VALUES
	('return_0001', 'library_01', 'member_002', 'bk_0001', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0002', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0003', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0004', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0005', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0006', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0007', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0008', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0009', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0010', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0011', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0012', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0013', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01'),
	('return_0014', 'library_01', 'member_002', 'bk_0005', 'rent_0001', '2020-07-24', '2020-07-24', 'officer_01');
/*!40000 ALTER TABLE `tb_return` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_review 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_review` (
  `review_code` varchar(30) NOT NULL COMMENT '도서평 코드',
  `book_code` varchar(30) NOT NULL COMMENT '북코드',
  `member_id` varchar(50) NOT NULL COMMENT '도서평회원아이디',
  `review_content` varchar(255) NOT NULL COMMENT '도서평 내용',
  `review_reg_date` date NOT NULL COMMENT '등록일자',
  PRIMARY KEY (`review_code`),
  KEY `FK_tb_member_TO_tb_review` (`member_id`),
  KEY `FK_tb_review_tb_book` (`book_code`),
  CONSTRAINT `FK_tb_member_TO_tb_review` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_review_tb_book` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서평 테이블';

-- 테이블 데이터 glemfk1214.tb_review:~7 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_review` DISABLE KEYS */;
INSERT INTO `tb_review` (`review_code`, `book_code`, `member_id`, `review_content`, `review_reg_date`) VALUES
	('review_1', 'bk_0006', 'id798', '343434', '2020-07-20'),
	('review_2', 'bk_0002', 'member_001', '재미따아', '2020-07-20'),
	('review_3', 'bk_0014', 'member_001', '너무 감명깊었습니다. 또 읽고싶습니다.', '2020-07-20'),
	('review_4', 'bk_0006', 'id001', '추천하는 책입니다.', '2020-07-20'),
	('review_5', 'bk_0012', 'member_001', '더해빙 리뷰1', '2020-07-23'),
	('review_6', 'bk_0012', 'id001', '더해빙 리뷰2', '2020-07-23'),
	('review_7', 'bk_0023', 'id002', '북코드가 다른 더해빙리뷰1', '2020-07-23');
/*!40000 ALTER TABLE `tb_review` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_rtcan_reserve 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_rtcan_reserve` (
  `rtcan_reserve_code` varchar(30) NOT NULL COMMENT '대여가능한 도서 예약코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '예약회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '예약도서코드',
  `reserve_date` date DEFAULT NULL COMMENT '예약날짜',
  `rtcan_situation` enum('대기','승인','거절','취소','대여완료') NOT NULL DEFAULT '대기' COMMENT '예약 상태',
  `reserve_reg_date` datetime DEFAULT NULL COMMENT '직원 승인 일자',
  `officer_id` varchar(50) DEFAULT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`rtcan_reserve_code`),
  KEY `FK_tb_officer_TO_tb_rtcan_reserve` (`officer_id`),
  KEY `FK_tb_library_TO_tb_rtcan_reserve` (`library_code`),
  KEY `FK_tb_member_TO_tb_rtcan_reserve` (`member_id`),
  KEY `FK_tb_book_TO_tb_rtcan_reserve` (`book_code`),
  CONSTRAINT `FK_tb_book_TO_tb_rtcan_reserve` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_rtcan_reserve` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_rtcan_reserve` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_rtcan_reserve` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='대여가능한 도서예약 테이블\r\n';

-- 테이블 데이터 glemfk1214.tb_rtcan_reserve:~8 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_rtcan_reserve` DISABLE KEYS */;
INSERT INTO `tb_rtcan_reserve` (`rtcan_reserve_code`, `library_code`, `member_id`, `book_code`, `reserve_date`, `rtcan_situation`, `reserve_reg_date`, `officer_id`) VALUES
	('rtcan_00001', 'library_01', 'member_001', 'bk_0001', '2020-06-30', '대여완료', '2020-07-01 00:00:00', 'officer_03'),
	('rtcan_00002', 'library_01', 'member_001', 'bk_0001', '2020-07-19', '취소', '2020-07-21 16:53:56', 'officer_03'),
	('rtcan_00003', 'library_01', 'member_001', 'bk_0001', '2020-07-19', '취소', '2020-07-21 16:55:28', 'officer_03'),
	('rtcan_00004', 'library_01', 'member_001', 'bk_0001', '2020-06-30', '거절', '2020-07-02 11:22:54', NULL),
	('rtcan_00005', 'library_01', 'member_001', 'bk_0001', '2020-06-30', '거절', '2020-07-01 16:15:27', 'officer_03'),
	('rtcan_00006', 'library_01', 'id001', 'bk_0001', '2020-07-20', '취소', '2020-07-21 16:55:28', 'officer_03'),
	('rtcan_00007', 'library_01', 'member_001', 'bk_0022', '2020-07-24', '취소', '2020-07-27 10:44:57', 'officer_03'),
	('rtcan_00008', 'library_01', 'member_001', 'bk_0017', '2020-07-27', '취소', '2020-07-28 14:54:05', 'officer_01');
/*!40000 ALTER TABLE `tb_rtcan_reserve` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_rting_reserve 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_rting_reserve` (
  `rting_reserve_code` varchar(30) NOT NULL COMMENT '대여중인 도서 예약코드',
  `library_code` varchar(30) NOT NULL COMMENT '도서관코드',
  `member_id` varchar(50) NOT NULL COMMENT '예약회원아이디',
  `book_code` varchar(30) NOT NULL COMMENT '예약도서코드',
  `reserve_date` datetime NOT NULL COMMENT '예약날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`rting_reserve_code`),
  KEY `FK_tb_officer_TO_tb_rting_reserve` (`officer_id`),
  KEY `FK_tb_library_TO_tb_rting_reserve` (`library_code`),
  KEY `FK_tb_member_TO_tb_rting_reserve` (`member_id`),
  KEY `FK_tb_book_TO_tb_rting_reserve` (`book_code`),
  CONSTRAINT `FK_tb_book_TO_tb_rting_reserve` FOREIGN KEY (`book_code`) REFERENCES `tb_book` (`book_code`),
  CONSTRAINT `FK_tb_library_TO_tb_rting_reserve` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_member_TO_tb_rting_reserve` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_rting_reserve` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='대여중인 도서예약테이블';

-- 테이블 데이터 glemfk1214.tb_rting_reserve:~2 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_rting_reserve` DISABLE KEYS */;
INSERT INTO `tb_rting_reserve` (`rting_reserve_code`, `library_code`, `member_id`, `book_code`, `reserve_date`, `officer_id`) VALUES
	('rting_0001', 'library_01', 'member_001', 'bk_0002', '2020-06-29 00:00:00', 'officer_02'),
	('rting_0002', 'library_01', 'member_002', 'bk_0002', '2020-06-29 00:00:00', 'officer_02');
/*!40000 ALTER TABLE `tb_rting_reserve` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_sms_history 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_sms_history` (
  `sms_history_code` varchar(50) NOT NULL COMMENT '메세지 발송 코드',
  `library_code` varchar(50) NOT NULL COMMENT '도서관 코드',
  `member_id` varchar(50) NOT NULL COMMENT '회원 id',
  `sms_standard_code` varchar(50) NOT NULL COMMENT '메세지 기준 코드',
  `sms_history_reg_date` date NOT NULL COMMENT '메세지 발송 일자',
  PRIMARY KEY (`sms_history_code`),
  KEY `FK_tb_sms_history_tb_library` (`library_code`),
  KEY `FK_tb_sms_history_tb_member` (`member_id`),
  KEY `FK_tb_sms_history_tb_sms_standard` (`sms_standard_code`),
  CONSTRAINT `FK_tb_sms_history_tb_library` FOREIGN KEY (`library_code`) REFERENCES `tb_library` (`library_code`),
  CONSTRAINT `FK_tb_sms_history_tb_member` FOREIGN KEY (`member_id`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_sms_history_tb_sms_standard` FOREIGN KEY (`sms_standard_code`) REFERENCES `tb_sms_standard` (`sms_standard_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='메세지 발송내역 테이블\r\n';

-- 테이블 데이터 glemfk1214.tb_sms_history:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_sms_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_sms_history` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_sms_standard 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_sms_standard` (
  `sms_standard_code` varchar(50) NOT NULL COMMENT '메세지 기준 코드',
  `sms_standard_name` varchar(50) NOT NULL COMMENT '메세지 기준 이름',
  `sms_standard_body` varchar(500) NOT NULL COMMENT '메세지 기준 문구',
  `sms_standard_reg_date` varchar(50) NOT NULL COMMENT '등록일자',
  `officer_id` varchar(50) NOT NULL COMMENT '등록자',
  PRIMARY KEY (`sms_standard_code`),
  KEY `FK_tb_sms_standard_tb_officer` (`officer_id`),
  CONSTRAINT `FK_tb_sms_standard_tb_officer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='sms발송 기준문구 테이블\r\n';

-- 테이블 데이터 glemfk1214.tb_sms_standard:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_sms_standard` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_sms_standard` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_warning 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_warning` (
  `warning_code` varchar(30) NOT NULL COMMENT '신고코드',
  `book_code` varchar(30) NOT NULL COMMENT '북코드',
  `review_code` varchar(30) NOT NULL COMMENT '도서평코드',
  `warning_suspect` varchar(50) NOT NULL COMMENT '피의자회원아이디',
  `warning_blower` varchar(50) DEFAULT NULL COMMENT '신고자회원아이디',
  `warning_content` varchar(255) NOT NULL COMMENT '신고내용',
  `warning_reg_date` date NOT NULL COMMENT '신고날짜',
  PRIMARY KEY (`warning_code`),
  KEY `FK_tb_member_TO_tb_warning` (`warning_suspect`),
  KEY `FK_tb_member_TO_tb_warning2` (`warning_blower`),
  KEY `FK_tb_review_TO_tb_warning` (`review_code`),
  KEY `FK_tb_warning_tb_book` (`book_code`),
  CONSTRAINT `FK_tb_member_TO_tb_warning` FOREIGN KEY (`warning_suspect`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_member_TO_tb_warning2` FOREIGN KEY (`warning_blower`) REFERENCES `tb_member` (`member_id`),
  CONSTRAINT `FK_tb_review_TO_tb_warning` FOREIGN KEY (`review_code`) REFERENCES `tb_review` (`review_code`),
  CONSTRAINT `FK_tb_warning_tb_book` FOREIGN KEY (`book_code`) REFERENCES `tb_review` (`book_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='도서평 신고 테이블';

-- 테이블 데이터 glemfk1214.tb_warning:~9 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_warning` DISABLE KEYS */;
INSERT INTO `tb_warning` (`warning_code`, `book_code`, `review_code`, `warning_suspect`, `warning_blower`, `warning_content`, `warning_reg_date`) VALUES
	('warning_001', 'bk_0023', 'review_7', 'id002', 'member_001', '신고합니다', '2020-07-23'),
	('warning_002', 'bk_0023', 'review_7', 'id002', 'member_001', '신고합니다', '2020-07-23'),
	('warning_003', 'bk_0023', 'review_7', 'id002', 'member_001', '신고합니다', '2020-07-23'),
	('warning_004', 'bk_0012', 'review_6', 'id001', 'member_001', '신고', '2020-07-23'),
	('warning_005', 'bk_0012', 'review_6', 'id004', 'member_001', '신고', '2020-07-23'),
	('warning_006', 'bk_0012', 'review_6', 'id001', 'member_001', '신고합니다!', '2020-07-23'),
	('warning_007', 'bk_0012', 'review_5', 'member_001', 'member_001', '테스트 신고용', '2020-07-23'),
	('warning_008', 'bk_0012', 'review_6', 'id001', 'member_001', 'gggggg', '2020-07-24'),
	('warning_009', 'bk_0012', 'review_6', 'id001', 'member_001', '테스트용', '2020-07-24');
/*!40000 ALTER TABLE `tb_warning` ENABLE KEYS */;

-- 테이블 glemfk1214.tb_writer 구조 내보내기
CREATE TABLE IF NOT EXISTS `tb_writer` (
  `writer_code` varchar(30) NOT NULL COMMENT '저자코드',
  `writer_name` varchar(50) NOT NULL COMMENT '저자이름',
  `writer_reg_date` date NOT NULL COMMENT '등록날짜',
  `officer_id` varchar(50) NOT NULL COMMENT '등록직원아이디',
  PRIMARY KEY (`writer_code`),
  KEY `FK_tb_officer_TO_tb_writer` (`officer_id`),
  CONSTRAINT `FK_tb_officer_TO_tb_writer` FOREIGN KEY (`officer_id`) REFERENCES `tb_officer` (`officer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='저자 테이블';

-- 테이블 데이터 glemfk1214.tb_writer:~115 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tb_writer` DISABLE KEYS */;
INSERT INTO `tb_writer` (`writer_code`, `writer_name`, `writer_reg_date`, `officer_id`) VALUES
	('writer_001', '가가와 도요히코', '2020-06-15', 'officer_01'),
	('writer_002', '가관', '2020-06-15', 'officer_01'),
	('writer_003', '가네코 가쓰미', '2020-06-15', 'officer_01'),
	('writer_004', '가네코 후미코', '2020-06-15', 'officer_01'),
	('writer_005', '가노 나오키', '2020-06-15', 'officer_01'),
	('writer_006', '가노코기 가즈노부', '2020-06-15', 'officer_01'),
	('writer_007', '가마타 에이키치', '2020-06-15', 'officer_01'),
	('writer_008', '가무라 이소타', '2020-06-15', 'officer_01'),
	('writer_009', '가사이 젠조', '2020-06-15', 'officer_01'),
	('writer_010', '가시와이 엔', '2020-06-15', 'officer_01'),
	('writer_011', '가쓰라 분지', '2020-06-15', 'officer_01'),
	('writer_012', '가야노 나가토모', '2020-06-15', 'officer_01'),
	('writer_013', '가오윈란', '2020-06-15', 'officer_01'),
	('writer_014', '가와나베 교사이', '2020-06-15', 'officer_01'),
	('writer_015', '가와무라 가료', '2020-06-15', 'officer_01'),
	('writer_016', '가와이 에이지로', '2020-06-15', 'officer_01'),
	('writer_017', '가와카미 하지메', '2020-06-15', 'officer_01'),
	('writer_018', '가와히가시 헤키고토', '2020-06-15', 'officer_01'),
	('writer_019', '가의', '2020-06-15', 'officer_01'),
	('writer_020', '가이바라 에키켄', '2020-06-15', 'officer_01'),
	('writer_021', '가지이 모토지로', '2020-06-15', 'officer_01'),
	('writer_022', '가토 가즈오', '2020-06-15', 'officer_01'),
	('writer_023', '가토 히로유키', '2020-06-15', 'officer_01'),
	('writer_024', '각훈', '2020-06-15', 'officer_01'),
	('writer_025', '갈홍', '2020-06-15', 'officer_01'),
	('writer_026', '강경애', '2020-06-15', 'officer_01'),
	('writer_027', '강세황', '2020-06-15', 'officer_01'),
	('writer_028', '강항', '2020-06-15', 'officer_01'),
	('writer_029', '강희안', '2020-06-15', 'officer_01'),
	('writer_030', '게도 가츠모토', '2020-06-15', 'officer_01'),
	('writer_031', '경운', '2020-06-15', 'officer_01'),
	('writer_032', '경허', '2020-06-15', 'officer_01'),
	('writer_033', '계용묵', '2020-06-15', 'officer_01'),
	('writer_034', '고가 사부로', '2020-06-15', 'officer_01'),
	('writer_035', '고나카무라 기요노리', '2020-06-15', 'officer_01'),
	('writer_036', '고노 세이스케', '2020-06-15', 'officer_01'),
	('writer_037', '고노에 후미마로', '2020-06-15', 'officer_01'),
	('writer_038', '고다 로한', '2020-06-15', 'officer_01'),
	('writer_039', '고린', '2020-06-15', 'officer_01'),
	('writer_040', '고마쓰 기요시', '2020-06-15', 'officer_01'),
	('writer_041', '고바야시 다키지', '2020-06-15', 'officer_01'),
	('writer_042', '고바야시 잇사', '2020-06-15', 'officer_01'),
	('writer_043', '고바야시 후사지로', '2020-06-15', 'officer_01'),
	('writer_044', '고바야시 히사오', '2020-06-15', 'officer_01'),
	('writer_045', '고사카이 후보쿠', '2020-06-15', 'officer_01'),
	('writer_046', '고석규', '2020-06-15', 'officer_01'),
	('writer_047', '고악', '2020-06-15', 'officer_01'),
	('writer_048', '고염무', '2020-06-15', 'officer_01'),
	('writer_049', '고운 에죠', '2020-06-15', 'officer_01'),
	('writer_050', '고유섭', '2020-06-15', 'officer_01'),
	('writer_051', '고지마 우스이', '2020-06-15', 'officer_01'),
	('writer_052', '고칸 시렌', '2020-06-15', 'officer_01'),
	('writer_053', '고토 분지로', '2020-06-15', 'officer_01'),
	('writer_054', '고토 신페', '2020-06-15', 'officer_01'),
	('writer_055', '고토쿠 슈스이', '2020-06-15', 'officer_01'),
	('writer_056', '고한승', '2020-06-15', 'officer_01'),
	('writer_057', '곤 준조', '2020-06-15', 'officer_01'),
	('writer_058', '곤도 시로스케', '2020-06-15', 'officer_01'),
	('writer_059', '공상임', '2020-06-15', 'officer_01'),
	('writer_060', '공융', '2020-06-15', 'officer_01'),
	('writer_061', '공자', '2020-06-15', 'officer_01'),
	('writer_062', '곽숭도', '2020-06-15', 'officer_01'),
	('writer_063', '관정', '2020-06-15', 'officer_01'),
	('writer_064', '관한경', '2020-06-15', 'officer_01'),
	('writer_065', '구니키다 돗보', '2020-06-15', 'officer_01'),
	('writer_066', '구라바 도미사부로', '2020-06-15', 'officer_01'),
	('writer_067', '구라타 햐쿠조', '2020-06-15', 'officer_01'),
	('writer_068', '구로이타 가쓰미', '2020-06-15', 'officer_01'),
	('writer_069', '구루시마 다케히코', '2020-06-15', 'officer_01'),
	('writer_070', '구리모토 존', '2020-06-15', 'officer_01'),
	('writer_071', '구리야가와 하쿠손', '2020-06-15', 'officer_01'),
	('writer_072', '구마라습', '2020-06-15', 'officer_01'),
	('writer_073', '구메 구니다케', '2020-06-15', 'officer_01'),
	('writer_074', '구메 마사오', '2020-06-15', 'officer_01'),
	('writer_075', '구보 덴즈이', '2020-06-15', 'officer_01'),
	('writer_076', '구보 사카에', '2020-06-15', 'officer_01'),
	('writer_077', '구사카 요코', '2020-06-15', 'officer_01'),
	('writer_078', '구스야마 마사오', '2020-06-15', 'officer_01'),
	('writer_079', '구양수', '2020-06-15', 'officer_01'),
	('writer_080', '구와노 도카', '2020-06-15', 'officer_01'),
	('writer_081', '구우', '2020-06-15', 'officer_01'),
	('writer_082', '구우', '2020-06-15', 'officer_01'),
	('writer_083', '구우카이', '2020-06-15', 'officer_01'),
	('writer_084', '구즈 요시히사', '2020-06-15', 'officer_01'),
	('writer_085', '구훙밍', '2020-06-15', 'officer_01'),
	('writer_086', '굴원', '2020-06-15', 'officer_01'),
	('writer_087', '궁딩쯔', '2020-06-15', 'officer_01'),
	('writer_088', '궈쯔장', '2020-06-15', 'officer_01'),
	('writer_089', '궈푸', '2020-06-15', 'officer_01'),
	('writer_090', '권구현', '2020-06-15', 'officer_01'),
	('writer_091', '권근', '2020-06-15', 'officer_01'),
	('writer_092', '권덕규', '2020-06-15', 'officer_01'),
	('writer_093', '권문해', '2020-06-15', 'officer_01'),
	('writer_094', '권상하', '2020-06-15', 'officer_01'),
	('writer_095', '권태응', '2020-06-15', 'officer_01'),
	('writer_096', '권필', '2020-06-15', 'officer_01'),
	('writer_097', '권환', '2020-06-15', 'officer_01'),
	('writer_098', '귀장', '2020-06-15', 'officer_01'),
	('writer_099', '금성탄', '2020-06-15', 'officer_01'),
	('writer_100', '긍선', '2020-06-15', 'officer_01'),
	('writer_101', '히가시노 게이고 ', '2020-07-06', 'officer_01'),
	('writer_102', '김수현 (지은이)', '2020-07-06', 'officer_01'),
	('writer_103', '정세랑 (지은이)', '2020-07-06', 'officer_01'),
	('writer_104', '윤정은 지음 ;마설 그림', '2020-07-06', 'officer_01'),
	('writer_105', '김이나 (지은이)', '2020-07-06', 'officer_01'),
	('writer_106', '이서윤,홍주연 지음', '2020-07-06', 'officer_01'),
	('writer_107', '재레드 다이아몬드 지음;김진준 옮김', '2020-07-06', 'officer_01'),
	('writer_108', '지은이: 히가시노 게이고 ;옮긴이: 양윤옥', '2020-07-06', 'officer_03'),
	('writer_109', '지은이: 조남주', '2020-07-08', 'officer_03'),
	('writer_110', '김지혜 지음', '2020-07-22', 'officer_03'),
	('writer_111', '지은이: 김영하', '2020-07-22', 'officer_03'),
	('writer_112', '저자: 야쿠마루 가쿠 ;옮긴이: 김성미', '2020-07-22', 'officer_03'),
	('writer_113', '홍길동123', '2020-07-22', 'officer_01'),
	('writer_114', '서민아 지음', '2020-07-23', 'officer_01'),
	('writer_115', '지은이·그린이: 이시형', '2020-07-23', 'officer_01');
/*!40000 ALTER TABLE `tb_writer` ENABLE KEYS */;

-- 뷰 glemfk1214.view_rent_count 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `view_rent_count` (
	`book_code` VARCHAR(30) NOT NULL COMMENT '도서코드' COLLATE 'utf8_general_ci',
	`library_code` VARCHAR(30) NOT NULL COMMENT '도서관코드' COLLATE 'utf8_general_ci',
	`book_library_code` VARCHAR(30) NOT NULL COMMENT '청구기호' COLLATE 'utf8_general_ci',
	`book_image` VARCHAR(200) NOT NULL COMMENT '책 이미지' COLLATE 'utf8_general_ci',
	`book_name` VARCHAR(50) NOT NULL COMMENT '도서이름' COLLATE 'utf8_general_ci',
	`category_code` VARCHAR(30) NOT NULL COMMENT '카테고리코드' COLLATE 'utf8_general_ci',
	`writer_code` VARCHAR(30) NOT NULL COMMENT '저자코드' COLLATE 'utf8_general_ci',
	`publisher_code` VARCHAR(30) NOT NULL COMMENT '출판사코드' COLLATE 'utf8_general_ci',
	`book_publish_date` DATE NOT NULL COMMENT '도서출간날짜',
	`book_price` VARCHAR(50) NOT NULL COMMENT '도서가격' COLLATE 'utf8_general_ci',
	`book_ISBN` VARCHAR(30) NOT NULL COMMENT 'ISBN' COLLATE 'utf8_general_ci',
	`book_description` VARCHAR(300) NOT NULL COMMENT '책 상세내역' COLLATE 'utf8_general_ci',
	`book_situation` ENUM('대여 중','보유 중','예약 중') NOT NULL COMMENT '도서상태' COLLATE 'utf8_general_ci',
	`book_reg_date` DATE NOT NULL COMMENT '등록날짜',
	`officer_id` VARCHAR(50) NOT NULL COMMENT '등록직원아이디' COLLATE 'utf8_general_ci',
	`group_code` VARCHAR(30) NULL COMMENT '그룹코드' COLLATE 'utf8_general_ci',
	`rent_date` VARCHAR(50) NOT NULL COMMENT '대여날짜' COLLATE 'utf8_general_ci',
	`writer_name` VARCHAR(50) NOT NULL COMMENT '저자이름' COLLATE 'utf8_general_ci',
	`rent_count` BIGINT(21) NOT NULL
) ENGINE=MyISAM;

-- 뷰 glemfk1214.view_rent_count 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `view_rent_count`;
CREATE ALGORITHM=UNDEFINED DEFINER=`glemfk1214`@`58.76.98.245` SQL SECURITY DEFINER VIEW `view_rent_count` AS select `b`.`book_code` AS `book_code`,`b`.`library_code` AS `library_code`,`b`.`book_library_code` AS `book_library_code`,`b`.`book_image` AS `book_image`,`b`.`book_name` AS `book_name`,`b`.`category_code` AS `category_code`,`b`.`writer_code` AS `writer_code`,`b`.`publisher_code` AS `publisher_code`,`b`.`book_publish_date` AS `book_publish_date`,`b`.`book_price` AS `book_price`,`b`.`book_ISBN` AS `book_ISBN`,`b`.`book_description` AS `book_description`,`b`.`book_situation` AS `book_situation`,`b`.`book_reg_date` AS `book_reg_date`,`b`.`officer_id` AS `officer_id`,`b`.`group_code` AS `group_code`,`r`.`rent_date` AS `rent_date`,`w`.`writer_name` AS `writer_name`,count(`r`.`book_code`) AS `rent_count` from ((`tb_rent` `r` join `tb_book` `b`) join `tb_writer` `w` on(((`r`.`book_code` = `b`.`book_code`) and (`b`.`writer_code` = `w`.`writer_code`)))) group by `r`.`book_code` having (`r`.`rent_date` between (now() + interval -(1) month) and now()) order by count(`r`.`book_code`) desc limit 0,10;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
